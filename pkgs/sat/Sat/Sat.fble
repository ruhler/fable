
<@>@ List@ = /Core/List%.List@;

@ VarId@ = /Sat/Cnf%.VarId@;
@ Var@ = /Sat/Cnf%.Var@;
@ Clause@ = List@<Var@>;
@ Formula@ = List@<Clause@>;
@ Assignment@ = List@<Var@>;
@ Timeout@ = /Sat/Cnf%.Timeout@;
@ Result@ = /Sat/Cnf%.Result@;
@ S@ = /Sat/Cnf%.S@;
% EqId = /Sat/Cnf%.EqId;
% AddClause = /Sat/Cnf%.AddClause;

(S@, Formula@) { S@; } AddClauses = (S@ s, Formula@ cls) {
  cls.?(nil: s);
  AddClauses(AddClause(s, cls.cons.head), cls.cons.tail);
};

(Formula@, Timeout@) { Result@; } Solve = (Formula@ f, Timeout@ t) {
  /Sat/Cnf%.Solve(AddClauses(/Sat/Cnf%.Empty, f), t);
};

@(VarId@, Var@, Clause@, Formula@, Assignment@, Result@, Timeout@,
  EqId, Solve);

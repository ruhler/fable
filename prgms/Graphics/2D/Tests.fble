
@ Drawing@ = /Drawing%.Drawing@;
@ Point@ = /Drawing%.Point@;
% Color = /Drawing%.Color;

@ Drawn@ = /Drawing/Test%.Drawn@;
@ Pixel@ = /Drawing/Test%.Pixel@;
% Drawn = /Drawing/Test%.Drawn;
% Draw = /Drawing/Test%.Draw;

% Triangle = /Graphics/2D%.Triangle;

% Int = /Int/Int/Lit%.Int;

<@>% List = /List%.List;

% Str = /String%.Str;

@ Test@ = /Test%.Test@;
% Test = /Test%.Test;
% TestSuite = /Test%.TestSuite;

Test@ Tests = TestSuite(Str|'Graphics.2D', List<Test@>[
  Test(Str|'Basic', !({
    Drawing@ drawing = Triangle(
      Point@(Int|0, Int|0),
      Point@(Int|0, Int|3),
      Point@(Int|3, Int|0), Color.Green);

    Drawn@ wnt = Drawn[
      Pixel@(Int|0, Int|0, Color.Green),
      Pixel@(Int|0, Int|1, Color.Green),
      Pixel@(Int|0, Int|2, Color.Green),
      Pixel@(Int|1, Int|0, Color.Green),
      Pixel@(Int|1, Int|1, Color.Green),
      Pixel@(Int|2, Int|0, Color.Green)
    ];
    Drawn@ got = Draw(drawing);
      
    /Drawing/Test%.AssertEquals(wnt, got);
  }))
]);

@(Tests);

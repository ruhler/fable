
% Chars = /Char%.Chars;

@ Bit@ = /Digits%.Bit@;
% B = /Digits%.Bit;

% AddM = /Fblf/Lib/Add%.AddM;
% IncM = /Fblf/Lib/Add%.IncM;
% DecM = /Fblf/Lib/Add%.DecM;

<@>% AllocM = /Fblf/Module%.AllocM;
<@>% PureM = /Fblf/Module%.PureM;
<@,@>% InstM = /Fblf/Module%.InstM;

@ Addr@ = /Fblf/Program%.Addr@;
@ Program@ = /Fblf/Program%.Program@;
% Assign = /Fblf/Program%.Assign;
% Const = /Fblf/Program%.Const;
% Seq = /Fblf/Program%.Seq;

@ Test@ = /Fblf/Test%.Test@;
@ TestInstance@ = /Fblf/Test%.TestInstance@;
% Test = /Fblf/Test%.Test;
% TestSuite = /Fblf/Test%.TestSuite;

% I = /Int/Int/Lit%.I;
% D = /Int/Int/Lit%.D;

<@>% List = /List%.List;

Test@ Tests = TestSuite(Str|'Add', List<Test@>[
  Test(Str|AddM, {
    Addr@ a <- AllocM<TestInstance@>(I(D|5));
    Addr@ b <- AllocM<TestInstance@>(I(D|5));
    Addr@ z <- AllocM<TestInstance@>(I(D|5));

    Program@ add <- InstM<Program@, TestInstance@>(AddM(I(D|4), a, b, z));

    # Note: we put an extra '1' bit after each value as a regression test for
    # a bug we had where it was reading one bit off the end of the values.
    Program@ test = Seq(List<Program@>[
      Assign(a, Const(B|00101), I(D|5)),
      Assign(b, Const(B|10111), I(D|5)),
      Assign(z, Const(B|11111), I(D|5)),
      add
    ]);

    PureM<TestInstance@>(TestInstance@(test, a, List<Bit@>(B|001011011111011)));
  }),

  Test(Str|IncM, {
    Addr@ a <- AllocM<TestInstance@>(I(D|5));
    Program@ inc <- InstM<Program@, TestInstance@>(IncM(I(D|5), a));
    Program@ test = Seq(List<Program@>[Assign(a, Const(B|10011), I(D|5)), inc]);
    PureM<TestInstance@>(TestInstance@(test, a, List<Bit@>(B|10100)));
  }),

  Test(Str|'IncM Overflow', {
    Addr@ a <- AllocM<TestInstance@>(I(D|5));
    Program@ inc <- InstM<Program@, TestInstance@>(IncM(I(D|5), a));
    Program@ test = Seq(List<Program@>[Assign(a, Const(B|11111), I(D|5)), inc]);
    PureM<TestInstance@>(TestInstance@(test, a, List<Bit@>(B|00000)));
  }),

  Test(Str|DecM, {
    Addr@ a <- AllocM<TestInstance@>(I(D|5));
    Program@ dec <- InstM<Program@, TestInstance@>(DecM(I(D|5), a));
    Program@ test = Seq(List<Program@>[Assign(a, Const(B|10100), I(D|5)), dec]);
    PureM<TestInstance@>(TestInstance@(test, a, List<Bit@>(B|10011)));
  })
]);

@(Tests);

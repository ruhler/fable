
% True = /Core/Bool%.True;
@ Char@ = /Core/Char%.Char@;
<@>@ List@ = /Core/List%.List@;
<@>% Concat = /Core/List%.Concat;
<<@>@>@ Monad@ = /Core/Monad%.Monad@;
<<@>@>@ Stdio@ = /Core/Stdio%.Stdio@;
<<@>@>@ Main@ = /Core/Stdio%.Main@;
@ String@ = /Core/String%.String@;
% Str = /Core/String%.Str;
@ Unit@ = /Core/Unit%.Unit@;

# Here are some comment lines you can include in your
# hello world program if you want to.

Main@ Test = <<@>@ M@>(Monad@<M@> m, Stdio@<M@> stdio)(List@<String@> args) {
  % O = /Core/Stream/OStream%(m);

  (List@<String@>) { M@<Unit@>; } Puts = (List@<String@> strs) {
    O.PutLine(stdio.out, Concat<Char@>(strs));
  };
  
  Unit@ _ <- m.do(Puts[Str|'hello, world']);
  Unit@ _ <- m.do(Puts[Str|'A boolean: ', /Core/Bool/Show%.Show(True)]);
  Unit@ _ <- m.do(Puts[Str|'A character: ', /Core/Char/Show%.Show(/Core/Char%.Chars.A)]);
  Unit@ _ <- m.do(Puts[Str|'A list: ',
    /Core/List/Show%.Show(/Core/Bool/Show%.Show)[True, True, True]]);
  Unit@ _ <- m.do(Puts[Str|'An integer: ',
    /Core/Int/Show%.Show(/Core/Int/Lit%.Int|42)]);
  m.return(True);
};

/Core/Stdio/IO%.Run(Test);


% Chars = /Char%.Chars;

@ Bit@ = /Digits%.Bit@;
% B = /Digits%.Bit;

@ Addr@ = /Fblf/Program%.Addr@;
@ Program@ = /Fblf/Program%.Program@;
% Assign = /Fblf/Program%.Assign;
% Const = /Fblf/Program%.Const;
% Seq = /Fblf/Program%.Seq;

<@>% AllocM = /Fblf/Module%.AllocM;
<@>% PureM = /Fblf/Module%.PureM;
<@,@>% InstM = /Fblf/Module%.InstM;

% I = /Int/Int/Lit%.I;
% D = /Int/Int/Lit%.D;

<@>% List = /List%.List;

@ Test@ = /Test%.Test@;
% TestSuite = /Test%.TestSuite;

% AddM = /Fblf/Lib/Add%.AddM;
% IncM = /Fblf/Lib/Add%.IncM;
% DecM = /Fblf/Lib/Add%.DecM;

@ FblfTest@ = /Fblf/Test%.FblfTest@;
% FblfTest = /Fblf/Test%.FblfTest;

Test@ Tests = TestSuite(Chars|'Lib.Add', [
  FblfTest(Chars|AddM, {
    Addr@ a <- AllocM<FblfTest@>(I(D|5));
    Addr@ b <- AllocM<FblfTest@>(I(D|5));
    Addr@ z <- AllocM<FblfTest@>(I(D|5));

    Program@ add <- InstM<Program@, FblfTest@>(AddM(I(D|4), a, b, z));

    # Note: we put an extra '1' bit after each value as a regression test for
    # a bug we had where it was reading one bit off the end of the values.
    Program@ test = Seq([
      Assign(a, Const(B|00101), I(D|5)),
      Assign(b, Const(B|10111), I(D|5)),
      Assign(z, Const(B|11111), I(D|5)),
      add
    ]);

    PureM<FblfTest@>(FblfTest@(test, I(D|0), List<Bit@>(B|001011011111011)));
  }),

  FblfTest(Chars|IncM, {
    Addr@ a <- AllocM<FblfTest@>(I(D|5));
    Program@ inc <- InstM<Program@, FblfTest@>(IncM(I(D|5), a));
    Program@ test = Seq([Assign(a, Const(B|10011), I(D|5)), inc]);
    PureM<FblfTest@>(FblfTest@(test, I(D|0), List<Bit@>(B|10100)));
  }),

  FblfTest(Chars|'IncM Overflow', {
    Addr@ a <- AllocM<FblfTest@>(I(D|5));
    Program@ inc <- InstM<Program@, FblfTest@>(IncM(I(D|5), a));
    Program@ test = Seq([Assign(a, Const(B|11111), I(D|5)), inc]);
    PureM<FblfTest@>(FblfTest@(test, I(D|0), List<Bit@>(B|00000)));
  }),

  FblfTest(Chars|DecM, {
    Addr@ a <- AllocM<FblfTest@>(I(D|5));
    Program@ dec <- InstM<Program@, FblfTest@>(DecM(I(D|5), a));
    Program@ test = Seq([Assign(a, Const(B|10100), I(D|5)), dec]);
    PureM<FblfTest@>(FblfTest@(test, I(D|0), List<Bit@>(B|10011)));
  })
]);

@(Tests);

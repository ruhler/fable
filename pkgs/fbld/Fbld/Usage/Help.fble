
<<@>@>@ Monad@ = /Core/Monad%.Monad@;

% Str = /Core/String%.Str;

<<@>@ M@>(Monad@<M@> m) {
  % MarkupModule = /Fbld/Markup%(m);
  @ Markup@ = MarkupModule.Markup@;
  % Block = MarkupModule.Block;
  % Entry = MarkupModule.Entry;

  % Define = /Fbld/Define%(m);

  Markup@ Markup = Block[
    Entry(Str|'usage', Define.DefB[Str|'name', Str|'brief', Str|'content']|'
@doc[$name][$name - $brief]
 $$content
'),
    Entry(Str|'synopsis', Define.DefB[Str|'text']|'@par[Usage: $text]'),
    Entry(Str|'description', Define.DefB[Str|'body']|'$body'),
    Entry(Str|'options', Define.DefB[Str|'body']|'$body'),
    Entry(Str|'opt', Define.DefB[Str|'opt', Str|'desc']|'@def[$opt][$desc]'),
    Entry(Str|'exitstatus', Define.DefB[Str|'body']|'
@section[Exit Status]
 $$body
'),
    Entry(Str|'examples', Define.DefB[Str|'body']|'
@section[Examples]
 $$body
'),
    Entry(Str|'ex', Define.DefB[Str|'text', Str|'desc']|'
@par[@l[$text]]
$desc
')
  ];

  @(Markup);
};

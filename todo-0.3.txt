Fble 0.3 TODO
=============
Things to consider doing for the fble-0.3 release.

* Module compilation
 - As a blocker for major compiler optimizations.

* Switch to varargs for FbleRunFunction?
 - Require callee to handle tail call (possibly with wrapper function for
   C-implemented callees)
 - Pass args as varargs.
 - Pass statics, executable, profile_block_offset via FbleFuncValue*?

* Support partial function application?
 - Allow over-application of functions.
 - Have <- perform over-application of functions.
 - Allow partial application of functions?
 - Don't distinguish between a -> (b -> c) and (a, b) -> c ?
 - See thoughts/fble-0.2/partial_application.txt for details.

* Fbld: Proper support for include/modularity

* Smten, and smten-based mnist classification.
* IEEE floating point support.
* Implement an image viewer.

* Make programs run twice as fast.
 - Implement function inlining?
 - Implement packing of data types?
 - Avoid repeated calls to FbleStrictValue in generated code?
 - Use registers for args and locals instead of the stack?
 - Inline calls to things like FbleStrictValue?

* Do something with .@ module value vs. type?
  - There's currently unexercised code for it.

* Do something with data type instruction?
  - There's currently unexercised code for it.

* Implement support for packed data values.
 - Change the compiler to allocate FbleDataTypeValue when appropriate.
 - Pass type to struct and union construction and access functions.
 - Implement packing for struct and union values.

* [compilation] Add support for .fble.@ files and modular compilation.

* [spec] Add some way to catch or recover from errors at runtime?

* [modules]
 - Decide about .fble.@ files.
 - Split FbleLoad into FbleLoadProgram and FbleLoadModule.
 - Add support for loading .fble.@ files.
   And presumably some way to test this and something about it in the language
   spec?
 - Test all combinations of .fble/.fble.@, with all combinations of type
   errors in one or the other or both.

* Add option for passing .so files to FbleLinkFromCompiledOrSource?

* Improve performance with profiling enabled?
 - Now that we removed the optimization for detecting duplicate call entries
   in the stack?
 - see thoughts/fble.profile.txt


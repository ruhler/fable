
@ Bool@ = /Core/Bool%.Bool@;
@ Bit@ = /Digits%.Bit@;

<@>@ BitN@ = <@ T@> {
  @ Result@ = *(T@ z, Bit@ cout);
  *(
    @<Result@> Result@,
    (T@){T@;} not,          # !a
    (T@, T@){T@;} and,      # a & b
    (T@, T@){T@;} or,       # a | b
    (T@, T@){T@;} xor,      # a ^ b
    (T@, T@){T@;} add,      # a + b
    (T@){T@;} inc,          # a++
    T@ zero,                # 0
    (T@){Bool@;} iszero,    # a == 0
    (T@, T@){Bool@;} eq,    # a == b
    (T@){Bit@;} msb,        # most significant bit
    (T@, T@, Bit@){Result@;} fulladd,
    (T@){Result@;} fullinc,
    (T@, Bit@){Result@;} lshift # left shift by 1
  );
};

@(Bit@, BitN@);

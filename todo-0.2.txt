Fble 0.2 TODO
=============
Things to do for the fble-0.2 release.

User Documentation:
* tutorials/Introduction phonetic rendering of fble is turning into ?? in html
  output.
  Maybe due to use of unicode character not supported by fble Char@?
* Rename 'args' to '_args' in hello world tutorial?
  To avoid warning about unused argument?
* Update book/ docs for language changes?
* Review all the generated documentation.
* Add usage generated help text to fble derived programs?
 graphics, md5, pinball, invaders, and sat?
* Add write and getenv to whatever tutorial describes Stdio@ interface.
* Update App tutorial (if there is one?) for updated App@ interface.
* Finalize release notes.
* Come up with a better story for building and integrating usage help text?
* Double check @fbld[...fbld#...] generates the right thing for html. For
  example, see the end of the Lists.fbld tutorial.
* Add back syntax highlighting of @code blocks to html backend.
 - May want improvements to html escaping
* Fbld Markdown Backend
 - Reflow paragraphs to 80 columns.
 - How to support labels in markdown?
 - etc.
* Feedback from users:
 - Better explanation of "lack of primitives" and why that's a good thing.
 - Explain how features are related to procedural programming
   - Control Flow
   - Loops
   - Interfaces (?)
 - Better explanation of what it means to say a type is a value.
 - Better explanation of mapping from file name to module path early on.
 - Clarify that '%' is needed for module paths in early tutorials.
 - Better explanation of where to find existing and/or generated docs.
 - It's not obvious that 'xfail' means expected failure.
* write tutorials for C api.
* Update install tutorial to reference the release of fble on github, now that
  we'll have published fble-0.1 release there.
* Factor out common code for @FbleVersion (@BuildStamp)
* Is there a 'bnf' @code syntax the source highlighter supports that 
  we could use to make the syntax specification in fble.fbld prettier?
  - if not, consider writing one? Or switching to a syntax that does exist?
* Add a way to specify package path on the command line?
* Improve exercises for Unions and Functions tutorials, and others.
* Remove FBLE_PACKAGE_PATH setting from Install tutorial.
  Now that we have the default package path to look in.
* Add way to do inline code syntax highlighting in fbld?
  Because it looks a little funny in the tutorials for things to be
  highlighted in code blocks but not in inline text.

Doc Comments
* convert lib/* code to fbld doc comments.
* Be able to write doc comments for extern values and types as well as
  functions.
* How to handle @file doc comments on header files?
  - Should we write documentation for them somewhere?
* Write test cases for doc comments extraction and conversion.
  - For example: blank lines in doc comments should be allowed and not cause
    the comment to be truncated.
* Would be nice to have SEE ALSO section for library man pages.
* dc.man: Treat arg and return descriptions as non-block always?
  Normally they wouldn't be block. Setting them as block adds a blank line
  before the descriptions in the generated man pages.
  Means we should change man.fbld to only infer paragraphs where block text is
  expected.

Syntax highlighting:
* fbld vim syntax:
 - Figure out how to make {...} only apply in argument context?
 - Any way we can vim highlight next line literal as normal text?
* Update or remove fbld/fbld.lang

Fbld Misc:
* Test for location tracking across @head and @tail?
* Allow multiple errors to be reported from a single run.

Error Messages:
* Better type error message in case when two different types have the same
  name? for example:

  <@ A@> {
     Maybe@<A@> NotA1 = Nothing<A@>;
     <@ A@> {
        Maybe@<A@> NotA2 = NotA1;
     }
  }
* [typecheck] Better error message for importing something from a module that
  is not defined in the module?


<@>@ List@ = /Core/List%.List@;

@ String@ = /Core/String%.String@;
% Str = /Core/String%.Str;

@ Impl@ = /Fbld/Markup%.Impl@;

@ Env@ = /Fbld/Env%.Env@<Impl@>;
% Empty = /Fbld/Env%.Empty<Impl@>;
% Insert = /Fbld/Env%.Insert<Impl@>;

@ Builtin@ = *(String@ name, Impl@ impl);

(List@<Builtin@>) { Env@; } Builtins = (List@<Builtin@> builtins) {
  /Core/List%.ForEach(builtins, Empty, (Builtin@ x, Env@ e) {
    Insert(e, x.name, x.impl);
  });
};

Env@ Env = Builtins[
  @(name: Str|'ifeq',   impl: /Fbld/Builtin/If%.IfEq),
  @(name: Str|'ifneq',   impl: /Fbld/Builtin/If%.IfNEq),
  @(name: Str|'head',   impl: /Fbld/Builtin/String%.Head),
  @(name: Str|'tail',   impl: /Fbld/Builtin/String%.Tail),
  @(name: Str|'define', impl: /Fbld/Builtin/Define%.Define),
  @(name: Str|'let',    impl: /Fbld/Builtin/Define%.Let),
  @(name: Str|'eval',   impl: /Fbld/Builtin/Eval%.Eval),
  @(name: Str|'plain',  impl: /Fbld/Builtin/Plain%.Plain),
  @(name: Str|'error',  impl: /Fbld/Builtin/Error%.Error)
];

@(Env);


<@>@ Maybe@ = /Core/Maybe%.Maybe@;

@ LocId@ = /Pprof/Profile%.LocId@;
@ Profile@ = /Pprof/Profile%.Profile@;
@ Sequence@ = /Pprof/Profile%.Sequence@;

# Remove references to the given location from the profile.
# 
# For example, if we fold 'B' out of the profile, then the path
#   
#   A -> B -> C
#
# Turns into:
#   
#   A -> C
#
# This is useful, for example, if B is a trampoline or helper function we
# don't want to worry about.
(LocId@, Profile@) { Profile@; } Fold = (LocId@ _id, Profile@ _p) {
  Maybe@<Profile@> TODO;
  TODO.just;
};

# Remove any samples from the profile that do not include the given sequence.
#
# This is useful for focusing in on a given set of samples.
(Sequence@, Profile@) { Profile@; } Include = (Sequence@ _seq, Profile@ _p) {
  Maybe@<Profile@> TODO;
  TODO.just;
};

# Remove any samples from the profile that include the given sequence.
#
# This is useful for ignoring a given set of samples, for example because
# you already understand what's going on in them.
(Sequence@, Profile@) { Profile@; } Exclude = (Sequence@ _seq, Profile@ _p) {
  Maybe@<Profile@> TODO;
  TODO.just;
};

@(Fold, Include, Exclude);

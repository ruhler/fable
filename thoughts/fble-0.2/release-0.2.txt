Fble Release 0.2
================

Too early days to think about a release, but we can think about what to work
on. Priority should be writing some serious fble apps. I propose the
following:

* fbld - implement it in fble. I bet some interesting things come out of this.
* sat - improve the sat solver. Maybe from what we learn we could implement a
  decent enough sat solver in C for smten?
* png viewer.
* floating point benchmark game.
* Hardware language something or other.

That is plenty to keep me busy. It won't stress the language too much. Once we
are done with those we can think about stressing the language with things like
persistent storage and other OS related functionality.

Next question is: which of these to focus on first? Because I'll have trouble
if I try to do them all at once.

My vote is: get some work in on sat, and think about fbld in the background.
Worry about png, floating point, and hardware language something or other
later.

---

We've come far enough now I think it's time to focus on getting the next
release out. In particular, this release has a lot of work done on the sat
solver and fbld applications in fble. The main fble language improvements are
performance, struct copy, and stack size.

There's a long way to go to clean up loose ends to get the release out. All
the more reason to switch focus on release instead of thinking about new
topics.

Documentation is the biggest thing. Getting parity with what we had before we
replaced the fbld implementation:

* Rewrite the fbld spec.
* Fix issues with generated documentation.
* Support for syntax highlighting.
 - Which may want improvements to html escaping.

---

Question on how to set tabstop/shiftwidth for .fbld files:
* I want shiftwidth=1 so that '>>' indents by one space.
* I want tabstop or softtabstop=1 so that tab is one space?

But you can always use space for that. And what if I want to go over faster
than one space at a time? I think better for tab to do whatever the user
prefers. Maybe they want it for traversing into the document, not for
indenting level by level.

It sounds like 'smarttab' is an option to have tab at the beginning of a line
behave like shiftwidth. That suggests tabstop really should be user
preference, but we may want to define shiftwidth.

README.txt for ftplugin says it should not set shiftwidth, which is a
personal preference. I think fbld is slightly difference in that it assumes
single space indent. Most other languages let users pick their own indent. So
I think it's okay to ignore the 'personal preference' part of that.

"The default filetype plugin files contain settings that 95% of the users will
want to use.".

shiftwidth is clearly not syntax. So it shouldn't go into the syntax file.

Is shiftwidth part of indent? It sounds like no. The job of 'indent' is to
figure out number of spaces to indent a new line given the setting of
shiftwidth.

So, proposal is: set shiftwidth=1 in ftplugin.



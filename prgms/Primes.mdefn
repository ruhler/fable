mdefn Primes< ; ; Primes<>> {
  using Bool<;> { Bool; True; False; };
  using UBNat<;> { Nat; 2; IsZero; Eq; Lt; Gt; Inc; Dec; Mul; Mod; };

  # Returns true if f evenly divides x.
  func Divides(Nat x, Nat f; Bool) {
    IsZero(Mod(x, f));
  };

  # Helper function for IsPrime.
  #   Computes whether x is prime given that there are no factors of x other
  #   than 1 that are less than f.
  func IsPrimeHelper(Nat x, Nat f ; Bool) {
    ?(Gt(Mul(f, f), x); True(),
        ?(Divides(x, f); False(),
            IsPrimeHelper(x, Inc(f))));
  };
  
  # TODO: It would be nice if the language had some way to differentiate
  # between public and private functions here?
  func IsPrime(Nat x ; Bool) {
    ?(Lt(x, 2()) ; False(), IsPrimeHelper(x, 2()));
  };

  func NthPrime(Nat x, Nat n; Nat) {
    ?(IsPrime(x) ;
        ?(IsZero(n) ; x, NthPrime(Inc(x), Dec(n))),
        NthPrime(Inc(x), n));
  };
};


% Int = /Core/Int/Lit%.Int;

<@>% Get = /Core/List/Length%.Get;

@ String@ = /Core/String%.String@;

@ Unit@ = /Core/Unit%.Unit@;


@ Impl@ = /Fbld/Eval%.Impl@;
@ Env@ = /Fbld/Eval%.Env@;
% AssertArgCount = /Fbld/Eval%.AssertArgCount;

@ Markup@ = /Fbld/Markup%.Markup@;
@ Command@ = /Fbld/Markup%.Command@;

% r = /Fbld/Result%.Monad;

Impl@ Error = (Env@ env, Command@ cmd) {
  Unit@ _ <- r.do(AssertArgCount(Int|1, cmd));
  Markup@ arg <- r.do(/Fbld/Eval%.Eval(env, Get(cmd.args, Int|0)));
  String@ msg <- r.do(/Fbld/Markup%.ToString(arg));
  /Fbld/Result%.Err<Markup@>(cmd.name.loc, msg);
};

@(Error);

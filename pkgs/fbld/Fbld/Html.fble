
@ Char@ = /Core/Char%.Char@;

<<@>@>@ Monad@ = /Core/Monad%.Monad@;

<<@>@>@ OStream@ = /Core/Stream%.OStream@;

@ String@ = /Core/String%.String@;
% Str = /Core/String%.Str;

@ Unit@ = /Core/Unit%.Unit@;
% Unit = /Core/Unit%.Unit;

@ StringL@ = /Fbld/StringL%.StringL@;

<@>% Ok = /Fbld/Result%.Ok;

<<@>@>@ R@ = /Fbld/Types%.R@;

<<@>@>% DoResult = /Fbld/Types%.DoResult;

<<@>@ M@>(Monad@<M@> m)(OStream@<M@> out) {

  @ Core@ = /Fbld/Core%(m).Core@;

  % O = /Core/Stream/OStream%(m);
  <@>% DoR = DoResult(m);

  (StringL@) { R@<M@>; } Text = (StringL@ str) {
    (String@) { R@<M@>; } text = (String@ s) {
      s.?(nil: m.return(Ok(Unit)));
      Char@ c = s.cons.head;
      Unit@ _ <- m.do(c.?(
        '&': O.PutStr(out, Str|'&amp;'),
        '<': O.PutStr(out, Str|'&lt;'),
        '>': O.PutStr(out, Str|'&gt;'),
        : O.PutChar(out, c))
      );
      text(s.cons.tail);
    };
    text(str.str);
  };

  (StringL@) { R@<M@>; } L = (StringL@ str) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<code>'));
    Unit@ _ <- DoR(Text(str));
    Unit@ _ <- m.do(O.PutStr(out, Str|'</code>'));
    m.return(Ok(Unit));
  };

  (StringL@) { R@<M@>; } A = (StringL@ str) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<i>'));
    Unit@ _ <- DoR(Text(str));
    Unit@ _ <- m.do(O.PutStr(out, Str|'</i>'));
    m.return(Ok(Unit));
  };

  (StringL@, R@<M@>) { R@<M@>; } Label = (StringL@ id, R@<M@> text) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<a id="'));
    Unit@ _ <- DoR(Text(id));
    Unit@ _ <- m.do(O.PutStr(out, Str|'">'));
    Unit@ _ <- DoR(text);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</a>'));
    m.return(Ok(Unit));
  };

  (StringL@, R@<M@>) { R@<M@>; } Ref = (StringL@ id, R@<M@> caption) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<a href="#'));
    Unit@ _ <- DoR(Text(id));
    Unit@ _ <- m.do(O.PutStr(out, Str|'">'));
    Unit@ _ <- DoR(caption);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</a>'));
    m.return(Ok(Unit));
  };

  (StringL@, R@<M@>) { R@<M@>; } Url = (StringL@ url, R@<M@> text) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<a href="'));
    Unit@ _ <- DoR(Text(url));
    Unit@ _ <- m.do(O.PutStr(out, Str|'">'));
    Unit@ _ <- DoR(text);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</a>'));
    m.return(Ok(Unit));
  };

  (StringL@, R@<M@>) { R@<M@>; } File = (StringL@ file, R@<M@> text) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<a href="'));
    Unit@ _ <- DoR(Text(file));
    Unit@ _ <- m.do(O.PutStr(out, Str|'"><code>'));
    Unit@ _ <- DoR(text);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</code></a>'));
    m.return(Ok(Unit));
  };

  (StringL@, R@<M@>) { R@<M@>; } Fbld = (StringL@ file, R@<M@> text) {
    # TODO: Convert filename from *.fbld to *.html
    StringL@ fbld = file;
    File(fbld, text);
  };

  (R@<M@>) { R@<M@>; }
  Par = (R@<M@> body) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<p>'));
    Unit@ _ <- DoR(body);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</p>'));
    m.return(Ok(Unit));
  };

  (R@<M@>) { R@<M@>; } Item = (R@<M@> body) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<ul><li>'));
    Unit@ _ <- DoR(body);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</li></ul>'));
    m.return(Ok(Unit));
  };

  (StringL@, StringL@) { R@<M@>; }
  Code = (StringL@ lang, StringL@ text) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<pre>'));
    Unit@ _ <- m.do(O.PutStr(out, text.str));
    Unit@ _ <- m.do(O.PutLine(out, Str|'</pre>'));
    m.return(Ok(Unit));
  };

  (R@<M@>, R@<M@>) { R@<M@>; }
  Def = (R@<M@> name, R@<M@> value) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<dl><dt>'));
    Unit@ _ <- DoR(name);
    Unit@ _ <- m.do(O.PutStr(out, Str|'</dt><dd>'));
    Unit@ _ <- DoR(value);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</dd></dl>'));
    m.return(Ok(Unit));
  };

  (R@<M@>, R@<M@>) { R@<M@>; }
  Section = (R@<M@> title, R@<M@> body) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<h2>'));
    Unit@ _ <- DoR(title);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</h2>'));
    body;
  };

  (R@<M@>, R@<M@>) { R@<M@>; }
  SubSection = (R@<M@> title, R@<M@> body) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<h3>'));
    Unit@ _ <- DoR(title);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</h3>'));
    body;
  };

  (R@<M@>, R@<M@>) { R@<M@>; }
  SubSubSection = (R@<M@> title, R@<M@> body) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<h4>'));
    Unit@ _ <- DoR(title);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</h4>'));
    body;
  };

  (R@<M@>, R@<M@>) { R@<M@>; }
  Doc = (R@<M@> title, R@<M@> body) {
    Unit@ _ <- m.do(O.PutLine(out, Str|'
<head>
<style>
body {
  color: #333333;
  font-family: sans-serif;
  max-width: 50em;
}
h1 { font-size: 2.0em; }
h2 { font-size: 1.6em; }
h3 { font-size: 1.4em; }
h4 { font-size: 1.2em; }
p { font-size: 1em; }
</style>
'));
    Unit@ _ <- m.do(O.PutStr(out, Str|'<title>'));
    Unit@ _ <- DoR(title);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</title>'));
    Unit@ _ <- m.do(O.PutLine(out, Str|'</head><body>'));
    Unit@ _ <- m.do(O.PutStr(out, Str|'<h1>'));
    Unit@ _ <- DoR(title);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</h1>'));
    Unit@ _ <- DoR(body);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</body>'));
    m.return(Ok(Unit));
  };

  Core@ Core = @(
    text: Text,
    l: L, a: A,
    label: Label, ref: Ref,
    url: Url, file: File, fbld: Fbld,
    par: Par,
    item: Item,
    code: Code,
    def: Def,
    definition: Def,
    section: Section,
    subsection: SubSection,
    subsubsection: SubSubSection,
    doc: Doc
  );

  @(Core);
};

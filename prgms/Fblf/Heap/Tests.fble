
@ Bool@ = /Bool%.Bool@;
% True = /Bool%.True;
% False = /Bool%.False;
% Chars = /Char%.Chars;
@ Test@ = /Test%.Test@;
% Test = /Test%.Test;
% TestSuite = /Test%.TestSuite;
<@>% AssertEquals = /Test%.AssertEquals;

% B = /Digits%.Bit;

% D = /Int/Int/Lit%.D;
% I = /Int/Int/Lit%.I;

@ Heap@ = /Fblf/Heap%.Heap@;
@ Ptr@ = /Fblf/Heap%.Ptr@;
% HeapFromBitStr = /Fblf/Heap%.HeapFromBitStr;
% Equals = /Fblf/Heap%.Equals;
% Assign = /Fblf/Heap%.Assign;


Test@ Tests = TestSuite(Chars|Heap, [
  Test(Chars|Equals_self, !({
    Heap@ a = HeapFromBitStr(B|001011100101);
    Bool@ wnt = True;
    Bool@ got = Equals(Ptr@(a, I(D|0)), Ptr@(a, I(D|0)), I(D|12));
    AssertEquals<Bool@>(/Bool/Eq%.Eq, /Bool/Show%.Show, wnt, got);
  })),

  Test(Chars|NotEquals, !({
    Heap@ a = HeapFromBitStr(B|001011100101);
    Heap@ b = HeapFromBitStr(B|001100101001);
    Bool@ wnt = False;
    Bool@ got = Equals(Ptr@(a, I(D|0)), Ptr@(b, I(D|0)), I(D|12));
    AssertEquals<Bool@>(/Bool/Eq%.Eq, /Bool/Show%.Show, wnt, got);
  })),

  Test(Chars|PartiallyEquals, !({
    Heap@ a = HeapFromBitStr(B|001011100101);
    Heap@ b = HeapFromBitStr(B|001100101001);
    Bool@ wnt = True;
    Bool@ got = Equals(Ptr@(a, I(D|0)), Ptr@(b, I(D|0)), I(D|3));
    AssertEquals<Bool@>(/Bool/Eq%.Eq, /Bool/Show%.Show, wnt, got);
  })),

  Test(Chars|InternalEquals, !({
    Heap@ a = HeapFromBitStr(B|001011100101);
    Heap@ b = HeapFromBitStr(B|001100101001);
    Bool@ wnt = True;
    Bool@ got = Equals(Ptr@(a, I(D|3)), Ptr@(b, I(D|1)), I(D|3));
    AssertEquals<Bool@>(/Bool/Eq%.Eq, /Bool/Show%.Show, wnt, got);
  })),

  Test(Chars|InternalNotEquals, !({
    Heap@ a = HeapFromBitStr(B|001011100101);
    Heap@ b = HeapFromBitStr(B|001100101001);
    Bool@ wnt = False;
    Bool@ got = Equals(Ptr@(a, I(D|3)), Ptr@(b, I(D|1)), I(D|4));
    AssertEquals<Bool@>(/Bool/Eq%.Eq, /Bool/Show%.Show, wnt, got);
  })),

  Test(Chars|SelfOffsetEquals, !({
    Heap@ a = HeapFromBitStr(B|001011100101);
    Bool@ wnt = True;
    Bool@ got = Equals(Ptr@(a, I(D|0)), Ptr@(a, I(D|7)), I(D|5));
    AssertEquals<Bool@>(/Bool/Eq%.Eq, /Bool/Show%.Show, wnt, got);
  })),

  Test(Chars|SelfOffsetNotEquals, !({
    Heap@ a = HeapFromBitStr(B|001011100101);
    Bool@ wnt = False;
    Bool@ got = Equals(Ptr@(a, I(D|0)), Ptr@(a, I(D|6)), I(D|5));
    AssertEquals<Bool@>(/Bool/Eq%.Eq, /Bool/Show%.Show, wnt, got);
  })),

  Test(Chars|Assign, !({
    Heap@ a = HeapFromBitStr(B|001011100101);
    Heap@ b = HeapFromBitStr(B|010000000101);
    Heap@ wnt = HeapFromBitStr(B|011100100101);
    Heap@ got = Assign(Ptr@(b, I(D|2)), Ptr@(a, I(D|5)), I(D|5));
    AssertEquals<Heap@>(/Fblf/Heap/Eq%.Eq, /Fblf/Heap/Show%.Show, wnt, got);
  }))
]);

@(Tests);


interf Md5I {
  import @ { Bit8M; Bit32M; HexM; ListM; MaybeM; BoolM; UnitM; };
  import Bit8M { Bit8; };
  import Bit32M { Bit32; };
  import BoolM { Bool; };
  import HexM { Hex; };
  import ListM { S; };
  import MaybeM { Maybe; };
  import UnitM { Unit; };

  # Md5Hash - A sequence of 32 hex characters.
  #  For example: d41d8cd98f00b204e9800998ecf8427e
  #  0 is the left-most character in the sequence; 'd' in this example.
  #  31 is the right-most character in the sequence; 'e' in this example.
  struct Md5Hash(
    Hex  0, Hex  1, Hex  2, Hex  3, Hex  4, Hex  5, Hex  6, Hex  7,
    Hex  8, Hex  9, Hex 10, Hex 11, Hex 12, Hex 13, Hex 14, Hex 15,
    Hex 16, Hex 17, Hex 18, Hex 19, Hex 20, Hex 21, Hex 22, Hex 23,
    Hex 24, Hex 25, Hex 26, Hex 27, Hex 28, Hex 29, Hex 30, Hex 31
  );

  func Eq(Md5Hash a, Md5Hash b; Bool);

  # Md5 -- Compute an MD5 hash of a stream of bytes.
  # Ports:
  #   input - Stream of bytes to compute the MD5 hash of.
  #
  # Result:
  #   The computed md5 hash.
  proc Md5(Maybe<Bit8>- input; ; Md5Hash);
};

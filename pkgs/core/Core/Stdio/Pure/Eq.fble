
% True = /Core/Bool%.True;
% False = /Core/Bool%.False;

<@>@ Eq@ = /Core/Eq%.Eq@;

@ Int@ = /Core/Int%.Int@;

<@>@ List@ = /Core/List%.List@;

<@>@ PureResult@ = /Core/Stdio/Pure%.PureResult@;
@ PureState@ = /Core/Stdio/Pure%.PureState@;

Eq@<List@<Int@>> IntsEq = /Core/List/Eq%.Eq(/Core/Int/Eq%.Eq);

Eq@<PureState@> PureStateEq = (PureState@ a, PureState@ b) {
  IntsEq(a.in, b.in).?(false: False);
  IntsEq(a.out, b.out).?(false: False);
  IntsEq(a.err, b.err).?(false: False);
  True;
};

<@ A@>(Eq@<A@>) { Eq@<PureResult@<A@>>; }
PureResultEq = <@ A@>(Eq@<A@> eq, PureResult@<A@> a, PureResult@<A@> b) {
  PureStateEq(a.s, b.s).?(false: False);
  eq(a.x, b.x).?(false: False);
  True;
};

@(PureStateEq, PureResultEq);

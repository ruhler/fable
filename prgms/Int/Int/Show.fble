
@ Char@ = /Char%.Char@;

@ Int@ = /Int/Int%.Int@;
% Int = /Int/Int/Lit%.Int;
% Add = /Int/Int%.Add;
% Neg = /Int/Int%.Neg;
% Mul = /Int/Int%.Mul;

<@>% Append = /List%.Append;

<@>@ Show@ = /Show%.Show@;

@ String@ = /String%.String@;
% Str = /String%.Str;

(String@) { Int@; } Read = {
  (Char@) { Int@; } Digit = (Char@ c) {
    c.?(
      '0': Int|0, '1': Int|1, '2': Int|2, '3': Int|3, '4': Int|4,
      '5': Int|5, '6': Int|6, '7': Int|7, '8': Int|8, '9': Int|9,
      : Int|0);
  };

  (Int@, String@) { Int@; } ReadP = (Int@ x, String@ s) {
    s.?(
      cons: ReadP(Add(Mul(Int|10, x), Digit(s.cons.head)), s.cons.tail),
      nil: x);
  };
  
  (String@ s) {
    s.?(
      cons: s.cons.head.?('-': Neg(ReadP(Int|0, s.cons.tail)), : ReadP(Int|0, s)),
      nil: Int|0);
  };
};

Show@<Int@> Show = (Int@ x) {
  x.?(
    n: Append<Char@>(Str|'-', /Int/IntP/Show%.Show(x.n)),
    0: Str|0,
    p: /Int/IntP/Show%.Show(x.p));
};

@(Read, Show);

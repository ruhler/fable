
@ Num@ = /Pinball/Num%.Num@;
% Add = /Pinball/Num%.Add;
% Mul = /Pinball/Num%.Mul;
% Eq = /Pinball/Num%.Eq;
% Ge = /Pinball/Num%.Ge;
% Le = /Pinball/Num%.Le;
% Lt = /Pinball/Num%.Lt;
% Int = /Pinball/Num%.Int;

@ Vec@ = /Pinball/Vec%.Vec@;
% SubV = /Pinball/Vec%.SubV;

<@>@ Show@ = /Show%.Show@;

% Strs = /String%.Strs;
% Str = /String%.Str;

Num@ 0 = Int|0;

@ Paddle@ = *(
  Vec@ center,    # The center of rotation of the paddle.
  Vec@ start,     # The start point of the paddle at angle 0 relative to center.
  Vec@ end,       # The end point of the paddle at angle 0 relative to center.
  Num@ vel,       # The angular velocity of the paddle in radians per tick.
  Num@ pos,       # The current angle of the paddle in radians.
  Num@ min,       # The minimum allowed value of pos.
  Num@ max,       # The maximum allowed value of pos.
  Num@ res        # The coefficient of restitution for the paddle.
);

# Paddle --
#   Specify a paddle.
#
# Args:
#   center - the center point of the paddle.
#   start - the starting point of the paddle when angle is 0.
#   end - the end point of the paddle when angle is 0.
#   vel - the angular velocity of the paddle in radians per tick.
#   pos - the current position of the paddle in radians.
#   min - the minimum allowed value of pos for the paddle.
#   max - the maximum allowed value of pos for the paddle.
#   res - the coefficient of restitituion for the paddle.
(Vec@, Vec@, Vec@, Num@, Num@, Num@, Num@, Num@) { Paddle@; }
Paddle = (Vec@ center, Vec@ start, Vec@ end, Num@ vel, Num@ pos, Num@ min, Num@ max, Num@ res) {
  Paddle@(center, SubV(start, center), SubV(end, center), vel, pos, min, max, res);
};

# Move -- 
#   Move a paddle by the given amount of time.
#
# Sets the velocity of the paddle to 0 if it reaches its end of range.
(Paddle@, Num@) { Paddle@; } Move = (Paddle@ p, Num@ t) {
  Eq(p.vel, 0).?(true: p);

  Num@ pos = Add(p.pos, Mul(p.vel, t));
  Lt(p.vel, 0).?(true: {
    Le(pos, p.min).?(
      true: Paddle@(p.center, p.start, p.end, 0, p.min, p.min, p.max, p.res),
      false: Paddle@(p.center, p.start, p.end, p.vel, pos, p.min, p.max, p.res));
  });

  Ge(pos, p.max).?(
    true: Paddle@(p.center, p.start, p.end, 0, p.max, p.min, p.max, p.res),
    false: Paddle@(p.center, p.start, p.end, p.vel, pos, p.min, p.max, p.res));
};

Show@<Paddle@> Show = (Paddle@ p) {
  Strs[
    Str|'(center: ', /Pinball/Vec%.Show(p.center),
    Str|', start: ', /Pinball/Vec%.Show(p.start),
    Str|', end: ', /Pinball/Vec%.Show(p.end),
    Str|', vel: ', /Pinball/Num%.Show(p.vel),
    Str|', pos: ', /Pinball/Num%.Show(p.pos),
    Str|')'];
};

@(Paddle@, Paddle, Move, Show);


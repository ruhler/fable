
@(Unit_: &Unit_);
@(Maybe_: &Maybe_);
@(Bool_: &Bool_);
@(Char_: &Char_);
@(List_: &List_);
@(Test: &Test);

@(List_Tests_: &List_Tests_);

@(UBNat_: &UBNat_);
@(UBNat_Tests_: &UBNat_Tests_);

@(Primes_: &Primes_);
@(Primes_Tests_: &Primes_Tests_);

@(Hex_: &Hex_);
@(Bits_: &Bits_);
@(Md5_: &Md5_);
@(Md5_Tests_: &Md5_Tests_);

Char_ { @(Char@); };
List_ { @(S@, S5, Concat); };
Test { @(Test@); };

S@<Test@> AllTests = Concat<Test@>(S5<S@<Test@>>(
  Test.Tests,
  List_Tests_.Tests,
  UBNat_Tests_.Tests,
  Primes_Tests_.Tests,
  Md5_Tests_.Tests
));

(S@<Char@>+ out) {
  Test.RunTests(out, AllTests);
};

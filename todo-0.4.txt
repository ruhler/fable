Fble 0.4 TODO
=============
Things to consider doing for the fble-0.4 release.

Map:
* It's annoying that we have to define a Map to use Set?
  Add a Map.For function and Set.For functions to apply things, so we can do,
  like:  /Core/Map/Tree%.Map(Ord).For(/Core/Set%).For(/Core/Set/Eq%)?
* Clean up uses of /Core/Map/Tree% in general.

Sockets:
* Return error messages in Sockets interface on failure to connect, serve, accept?
  Yes, definitely needed. Or an error code?
* Need a way to explicitly close sockets connection?
  For example, elinks seems to think fble-pprof isn't done writing its
  response. Or is there some other issue going on there?

Tests:
* Add spec tests for full coverage.
 - Test for main .fble file not found somehow? load.c
 - Test for builtin module with builtin dependencies? load.c
 - Test header file that depends on a module with a type error. typecheck.c
* Add test for .fble vs. .fble.@ type for main module as well as dependant
  module.
* Test for malformed .fble of dependant file gives no error when well formed
  .fble.@ is there and we are just compiling the module.
* Add test and fix for this case:
 1. We load builtin A, which loads dependent builtin B
 2. We load .fble C, which depends on builtin B
 At what point do we check and load the type information for B?


Tutorials:
* Update tutorials for changes since last release
 - modular compilation in particular
* Add exercises to exercise each main point in every tutorial.
* C API
* /App/App%
* /Core/Test%


Other:
* Add helper macros for defining static FbleString and FbleModulePath?
* Figure out how to make generated c for fble modules satisfy -Wpedantic?
  - FbleString static initialization is one issue.

* Fbld C rewrite
 - Separate out loc.h, text.h, markup.h, etc?
 - Change FbldMarkup type to more explicitly distinguish between the different
   kinds of markups.
 - Figure out how to associate a location with empty markup.
 - Avoid constructing markups with singleton sequences?

* Fix potential GC gen overflow?
 - See thoughts/fble-0.3/stack_alloc.txt for details.

Doc Comments
 - dccheck should require @type present in @value content?
 - Add support for @union and @enum doc comments?
 - Add support for abstract typedef struct doc comments?
 - Would be nice to have SEE ALSO section for library man pages.

* Update release notes with latest relevant changes.

* Better error message in case of types not equal that aren't obviously
  unequal?
 - For example, see the error message we get out of
   spec/SpecTests/6.4-TypeInference/Regression/Map.fble



% Int = /Core/Int/Lit%.Int;

<@>% List = /Core/List%.List;

@ String@ = /Core/String%.String@;
% Str = /Core/String%.Str;

@ Test@ = /Core/Test%.Test@;
% Test = /Core/Test%.Test;
% TestSuite = /Core/Test%.TestSuite;
<@>% AssertEquals = /Core/Test%.AssertEquals;

@ Unit@ = /Core/Unit%.Unit@;

<@>@ Fbld@ = /Fbld/Fbld%.Fbld@;
@ Env@ = /Fbld/Fbld%.Env@;

@ Loc@ = /Fbld/Loc%.Loc@;

@ Text@ = /Fbld/Text%.Text@;
% Text = /Fbld/Text%.Text;
% StringOf = /Fbld/Text%.StringOf;

<@>@ Result@ = /Fbld/Result%.Result@;
<@>% Ok = /Fbld/Result%.Ok;
<@>% Err = /Fbld/Result%.Err;

% Run = /Fbld/Run%;

(String@) { Result@<String@>; } RunBlock = (String@ s) {
  Text@ input = Text(s, Loc@(Str|'file.fbld', Int|1, Int|1, Int|0));
  Env@ env = /Fbld/Markup%.Env(/Fbld/Builtin%.Markup);
  Fbld@<Text@> m = Run.Block(input);
  Result@<Text@> r = /Fbld/Fbld%.Run(m, env);
  r.?(ok: Ok(StringOf(r.ok)));
  Err<String@>(r.err);
};

Test@ Tests = TestSuite(Str|Builtin, List[
  Test(Str|Raw, (Unit@ _) {
    String@ input = Str|'@raw[ hello this is raw text! ]';

    Result@<String@> wnt = Ok<String@>|' hello this is raw text! ';
    Result@<String@> got = RunBlock(input);
    AssertEquals(
      /Fbld/Eq%.Result(/Core/String/Eq%.Eq),
      /Fbld/Show%.Result(/Core/String/Show%.Show), wnt, got);
  }),

  Test(Str|DefB, (Unit@ _) {
    String@ input = Str|'
@defb[foo][a][b]
 @raw[a: $a, b: $b]
@@
@foo[hello][there]
';

    Result@<String@> wnt = Ok<String@>|'a: hello, b: there';
    Result@<String@> got = RunBlock(input);
    AssertEquals(
      /Fbld/Eq%.Result(/Core/String/Eq%.Eq),
      /Fbld/Show%.Result(/Core/String/Show%.Show), wnt, got);
  }),

  Test(Str|SubstIndent, (Unit@ _) {
    # Each line of the argument should be indented by the amount of indent of
    # the line that contains the variable in the body.
    String@ input = Str|'
@defb[foo][x]
 @raw[
      a $x]
@@
@foo[hello
there
how are you?]
';

    Result@<String@> wnt = Ok<String@>|'
     a hello
     there
     how are you?';
    Result@<String@> got = RunBlock(input);
    AssertEquals(
      /Fbld/Eq%.Result(/Core/String/Eq%.Eq),
      /Fbld/Show%.Result(/Core/String/Show%.Show), wnt, got);
  })
]);

@(Tests);

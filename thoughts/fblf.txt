Initial reactions trying to program in fblf:

* I feel like I really want an else branch.

  Surely it's more efficient to do
   if (p) ... else ...;
  Than it is to do
   if (p) ...; if (!p) ...;

  It's at least more obvious that the two blocks are mutually exclusive.

* Without any abstraction layer, it's pretty obvious that all the programs I
  write will be constantly doing bit level manipulations. Isn't that going to
  make it pretty slow in practice?

  If it takes 18 statements for each bit of addition, then we're talking on
  the order of 576 statements to do a 32 bit addition. Even if we only execute
  half of those at runtime, we're still 200x times slower than C code.

  But maybe I should be comparing with fble instead of c? Fble already does
  this, right? It just hides it much better behind abstractions.


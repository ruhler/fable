Syntax Reference
----------------

* A sequence of files are concatenated together and parsed as block structured
  text.
* Block structured text is a sequence of blank line delimited blocks.
* A block is either a block command or implicit block text.
* Implicit block text is inline structured text up to the next blank line.
* A block command starts with '@' in the first column, followed by a command
  name, followed by:
  - Zero or more inline arguments.
  - An optional same line argument.
  - An optional next line argument.
  - An optional continuation.
  - An optional final argument.
* An inline argument is inline structured text in square brackets.
* A same line argument is inline structured text between a single space
  character and the end of the line.
* A next line argument is when the next line starts with a single space
  indent. The following lines that maintain that single space indent are
  parsed as block structured text with the single space indent removed.
* A continuation is when the following line starts with '@' without a
  following command name. Everything allowed after a block command name is
  allowed after a continuation.
* A final argument is when the next line is '@@'. The following unindented
  text is parsed as block structured text.
* A final argument can also be indicated by having ' @@' at the end of the
  same line. In that case the ' @@' is not include in any same line argument
* A next line literal argument is indicated by having ' @' at the end of the
  same line. A single space indent should start on the next line. Indent text
  is read literally without any further parsing or escape sequences.
and the following unindented text is parsed as block structured text.
* Inline structured text is a sequence of inlines.
* An inline is either an inline command or plain text.
* Inline command is '@' followed by a command name followed by zero or more
  inline arguments.
* Plain text is everything else not inline text.
* \\, \[, \], \@, \n are escape sequences for \, [, ], @, and newline.
* A command name is one or more characters from [a-zA-Z0-9_].

Details:
* Lines that are blank or only contain spaces do not interrupt indented text,
  even if they have fewer spaces than the current indent level.

Questions:
* Can you have an empty continuation? For example:
  @foo
  @
  @ hello
* Can you have unescaped nested [ ] in plain text?
* Can you have blank lines at the end of next line literal text?

Builtins
========
@head[str]
  Returns the first character of the given string after evaluation. Returns an
  empty string if the given string is empty.

@tail[str]
  Returns all but the first character of the given string after evaluation.
  Returns an empty string if the given string is empty.

@ifeq[a][b][then][else]
  Compares strings 'a' and 'b' after evaluation. If they are equal, returns
  the result of evaluating the 'then' branch. Otherwise returns the results of
  evaluating the 'else' branch.

@define[name][params][def][body]
  Defines a new command @<name> for use in the body. Params is a space
  separated list of parameters for the new command. 'def' defines the value of
  the command, which will be evaluated in a context where args are bound to
  the parameters.

  For example:

  @define[ShowPair][a b][The pair is: @a, @b][@ShowPair[hello][there]]
  


{ /Char%; @(Char@, Chars); };
{ /Int/Int%; @(Int@, 0, 1, 2, 3, 4, 5, 6); };
{ /List%; @(S@, S); };
{ /String%; @(Str); };
{ /Test%; @(Test@, TestResult@); };
{ /Unit%; @(Unit); };

{ /GameOfLife%; @(Coord@, World@, World, EqWorld, Step); };

# Import to test compilation.
{ @(x: /GameOfLife/App%); @(); };

# Do a sigle step of the acorn configuration.
# Generation 0:
#   .O.....
#   ...O...
#   OO..OOO 
#   .......
#
# Generation 1:
#   .......
#   OOO.OO.
#   ....OO.
#   .....O.
TestResult@! AcornStep = $({
  (Int@, Int@) { Coord@; } C = (Int@ x, Int@ y) { Coord@(x, y); };

  World@ g0 = World([
    C(0, 1),
    C(1, 3),
    C(2, 0), C(2, 1), C(2, 4), C(2, 5), C(2, 6)
  ]);

  World@ g1 = World([
    C(1, 0), C(1, 1), C(1, 2), C(1, 4), C(1, 5),
    C(2, 4), C(2, 5),
    C(3, 5)
  ]);

  ?(EqWorld(g1, Step(g0));
      true: TestResult@(pass: Unit),
      false: TestResult@(fail: Str(Chars|failed)));
});

S@<Test@> Tests = S<Test@>([
  Test@(Str(Chars|'GameOfLife.AcornStep'), AcornStep)
  ]);

@(Tests);

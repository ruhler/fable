
@ Int@ = /Core/Int%.Int@;

<@>@ Maybe@ = /Core/Maybe%.Maybe@;

<@>@ IO@ = /Core/Monad/IO%.IO@;
@ World@ = /Core/Monad/IO%.World@;
<@>@ R@ = /Core/Monad/IO%.R@;

<<@>@>@ IStream@ = /Core/Stream%.IStream@;

@ Mode@ = /Core/Stdio%.Mode@;

@ String@ = /Core/String%.String@;

@ Unit@ = /Core/Unit%.Unit@;

IO@<Maybe@<Int@>> Stdin;
(Int@, World@) { R@<Unit@>; } Stdout;
(Int@, World@) { R@<Unit@>; } Stderr;
(String@, Mode@, World@) { R@<Maybe@<IStream@<IO@>>>; } Read;
(String@, Mode@, World@) { R@<Maybe@<(Int@, World@) { R@<Unit@>; }>>; } Write;
(String@, World@) { R@<Maybe@<String@>>; } GetEnv;

@(Stdin, Stdout, Stderr, Read, Write, GetEnv);

mdefn List<T ; ; List<T>> {
  using Unit<;> { Unit; };

  struct P(T head, S tail);
  union S(Unit nil, P cons); 

  # InitP - Return all but the last element in 'list'.
  func InitP(P list; S) {
    ?(list.tail; S:nil(Unit()), S:cons(P(list.head, InitP(list.tail.cons))));
  };

  # LastP - Return the last element in 'list'.
  func LastP(P list; T) {
    ?(list.tail; list.head, LastP(list.tail.cons));
  };

  # Append list b to the end of list a.
  func Append(S a, S b ; S) {
    ?(a; b, S:cons(P(a.cons.head, Append(a.cons.tail, b))));
  };
};

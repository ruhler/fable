
@ Char@ = /Core/Char%.Char@;

<<@>@>@ Monad@ = /Core/Monad%.Monad@;

<@>% Append = /Core/List%.Append;
<@>% Reverse = /Core/List%.Reverse;
<@>% Drop = /Core/List/Length%.Drop;
<@>% Length = /Core/List/Length%.Length;

<<@>@>@ OStream@ = /Core/Stream%.OStream@;

@ String@ = /Core/String%.String@;
% Str = /Core/String%.Str;
% StartsWith = /Core/String/Eq%.StartsWith;

@ Unit@ = /Core/Unit%.Unit@;
% Unit = /Core/Unit%.Unit;

@ Loc@ = /Fbld/Loc%.Loc@;

@ Text@ = /Fbld/Text%.Text@;
% Text = /Fbld/Text%.Text;
% LocOf = /Fbld/Text%.LocOf;
% StringOf = /Fbld/Text%.StringOf;

<@>% Ok = /Fbld/Result%.Ok;

<<@>@ M@>(Monad@<M@> m, OStream@<M@> out) {

  % ResultM = /Fbld/ResultM%<M@>;
  <@>@ MR@ = ResultM.MR@;
  Monad@<MR@> mr = ResultM.Monad(m);

  @ Core@ = /Fbld/Core%(m).Core@;

  % O = /Core/Stream/OStream%(m);

  (Text@) { MR@<Unit@>; }
  HtmlText = (Text@ str) {
    (String@) { MR@<Unit@>; } text = (String@ s) {
      s.?(nil: mr.return(Unit));
      Char@ c = s.cons.head;
      Unit@ _ <- m.do(c.?(
        '&': O.PutStr(out, Str|'&amp;'),
        '<': O.PutStr(out, Str|'&lt;'),
        '>': O.PutStr(out, Str|'&gt;'),
        : O.PutChar(out, c))
      );
      text(s.cons.tail);
    };
    text(StringOf(str));
  };

  (Text@) { MR@<Unit@>; }
  L = (Text@ str) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<code>'));
    Unit@ _ <- mr.do(HtmlText(str));
    Unit@ _ <- m.do(O.PutStr(out, Str|'</code>'));
    mr.return(Unit);
  };

  (Text@) { MR@<Unit@>; }
  A = (Text@ str) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<i>'));
    Unit@ _ <- mr.do(HtmlText(str));
    Unit@ _ <- m.do(O.PutStr(out, Str|'</i>'));
    mr.return(Unit);
  };

  (Text@, MR@<Unit@>) { MR@<Unit@>; }
  Label = (Text@ id, MR@<Unit@> text) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<a id="'));
    Unit@ _ <- mr.do(HtmlText(id));
    Unit@ _ <- m.do(O.PutStr(out, Str|'">'));
    Unit@ _ <- mr.do(text);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</a>'));
    mr.return(Unit);
  };

  (Text@, MR@<Unit@>) { MR@<Unit@>; }
  Ref = (Text@ id, MR@<Unit@> caption) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<a href="#'));
    Unit@ _ <- mr.do(HtmlText(id));
    Unit@ _ <- m.do(O.PutStr(out, Str|'">'));
    Unit@ _ <- mr.do(caption);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</a>'));
    mr.return(Unit);
  };

  (Text@, MR@<Unit@>) { MR@<Unit@>; }
  Url = (Text@ url, MR@<Unit@> text) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<a href="'));
    Unit@ _ <- mr.do(HtmlText(url));
    Unit@ _ <- m.do(O.PutStr(out, Str|'">'));
    Unit@ _ <- mr.do(text);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</a>'));
    mr.return(Unit);
  };

  (Text@, MR@<Unit@>) { MR@<Unit@>; }
  File = (Text@ file, MR@<Unit@> text) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<a href="'));
    Unit@ _ <- mr.do(HtmlText(file));
    Unit@ _ <- m.do(O.PutStr(out, Str|'"><code>'));
    Unit@ _ <- mr.do(text);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</code></a>'));
    mr.return(Unit);
  };

  (Text@, MR@<Unit@>) { MR@<Unit@>; }
  Fbld = (Text@ file, MR@<Unit@> text) {
    # Convert filename from *.fbld to *.html
    String@ replaced = {
      String@ reversed = Reverse(StringOf(file));
      String@ fbld = Reverse(Str|'.fbld');
      StartsWith(reversed, fbld).?(false: replaced);
      String@ tail = Drop(Length(fbld), reversed);
      Append(Reverse(Str|'.html'), tail);
    };
    Text@ fbld = Text(Reverse(replaced), LocOf(file));

    File(fbld, text);
  };

  (MR@<Unit@>) { MR@<Unit@>; }
  Par = (MR@<Unit@> body) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<p>'));
    Unit@ _ <- mr.do(body);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</p>'));
    mr.return(Unit);
  };

  (MR@<Unit@>) { MR@<Unit@>; }
  Item = (MR@<Unit@> body) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<ul><li>'));
    Unit@ _ <- mr.do(body);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</li></ul>'));
    mr.return(Unit);
  };

  (Text@, Text@) { MR@<Unit@>; }
  Code = (Text@ lang, Text@ text) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<pre>'));
    Unit@ _ <- m.do(O.PutStr(out, StringOf(text)));
    Unit@ _ <- m.do(O.PutLine(out, Str|'</pre>'));
    m.return(Ok(Unit));
  };

  (MR@<Unit@>, MR@<Unit@>) { MR@<Unit@>; }
  Def = (MR@<Unit@> name, MR@<Unit@> value) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<dl><dt>'));
    Unit@ _ <- mr.do(name);
    Unit@ _ <- m.do(O.PutStr(out, Str|'</dt><dd>'));
    Unit@ _ <- mr.do(value);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</dd></dl>'));
    mr.return(Unit);
  };

  (MR@<Unit@>, MR@<Unit@>) { MR@<Unit@>; }
  Section = (MR@<Unit@> title, MR@<Unit@> body) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<h2>'));
    Unit@ _ <- mr.do(title);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</h2>'));
    body;
  };

  (MR@<Unit@>, MR@<Unit@>) { MR@<Unit@>; }
  SubSection = (MR@<Unit@> title, MR@<Unit@> body) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<h3>'));
    Unit@ _ <- mr.do(title);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</h3>'));
    body;
  };

  (MR@<Unit@>, MR@<Unit@>) { MR@<Unit@>; }
  SubSubSection = (MR@<Unit@> title, MR@<Unit@> body) {
    Unit@ _ <- m.do(O.PutStr(out, Str|'<h4>'));
    Unit@ _ <- mr.do(title);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</h4>'));
    body;
  };

  (Loc@, MR@<Unit@>, MR@<Unit@>) { MR@<Unit@>; }
  Doc = (Loc@ _, MR@<Unit@> title, MR@<Unit@> body) {
    Unit@ _ <- m.do(O.PutLine(out, Str|'
<head>
<style>
body {
  color: #333333;
  font-family: sans-serif;
  max-width: 50em;
}
h1 { font-size: 2.0em; }
h2 { font-size: 1.6em; }
h3 { font-size: 1.4em; }
h4 { font-size: 1.2em; }
p { font-size: 1em; }
</style>
'));
    Unit@ _ <- m.do(O.PutStr(out, Str|'<title>'));
    Unit@ _ <- mr.do(title);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</title>'));
    Unit@ _ <- m.do(O.PutLine(out, Str|'</head><body>'));
    Unit@ _ <- m.do(O.PutStr(out, Str|'<h1>'));
    Unit@ _ <- mr.do(title);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</h1>'));
    Unit@ _ <- mr.do(body);
    Unit@ _ <- m.do(O.PutLine(out, Str|'</body>'));
    mr.return(Unit);
  };

  Core@ Core = @(
    text: HtmlText,
    l: L, a: A,
    label: Label, ref: Ref,
    url: Url, file: File, fbld: Fbld,
    par: Par,
    item: Item,
    code: Code,
    def: Def,
    definition: Def,
    section: Section,
    subsection: SubSection,
    subsubsection: SubSubSection,
    doc: Doc
  );

  @(Core);
};

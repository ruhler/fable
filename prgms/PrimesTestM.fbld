module PrimesTestM(PrimesTestI) {
  using UnitM { Unit; };
  using BoolM { Bool; };
  using UBNatM { Nat; 1; 3; 10; Lit2; Eq; };
  using PrimesM { NthPrime; };
  using ListM { S; P; };

  union TestName(
      Unit NthPrime_1_10
  );

  struct TestFailure(TestName name, Nat a, Nat b);
  
  func TEq(TestName name, Nat a, Nat b, S<TestFailure> rest; S<TestFailure>) {
    ?(Eq(a, b); rest,
      S<TestFailure>:cons(P<TestFailure>(TestFailure(name, a, b), rest)));
  };

  func Test( ; S<TestFailure>) {
    TEq(TestName:NthPrime_1_10(Unit()), Lit2(3(), 1()), NthPrime(1(), 10()),
    S<TestFailure>:nil(Unit()));
  };
};

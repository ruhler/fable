
% True = /Core/Bool%.True;
% False = /Core/Bool%.False;

<@>@ Eq@ = /Eq%.Eq@;

@ Num@ = /Pinball/Num%.Num@;

@ Vec@ = /Pinball/Vec%.Vec@;
% AddV = /Pinball/Vec%.AddV;
% MulVS = /Pinball/Vec%.MulVS;

<@>@ Show@ = /Show%.Show@;

% Strs = /Core/String%.Strs;
% Str = /Core/String%.Str;

# Ball@ --
#   pos - the position of the center of the ball.
#   vel - the velocity of the ball.
#   radius - the radius of the ball.
@ Ball@ = *(Vec@ pos, Vec@ vel, Num@ radius);

# Move --
#   Move a ball by the given amount of time assuming constant velocity.
(Ball@, Num@) { Ball@; } Move = (Ball@ ball, Num@ time) {
  Vec@ pos = AddV(ball.pos, MulVS(ball.vel, time));
  Ball@(pos, ball.vel, ball.radius);
};

Eq@<Ball@> Eq = (Ball@ a, Ball@ b) {
  /Pinball/Vec%.Eq(a.pos, b.pos).?(false: False);
  /Pinball/Vec%.Eq(a.vel, b.vel).?(false: False);
  /Pinball/Num%.Eq(a.radius, b.radius).?(false: False);
  True;
};

Show@<Ball@> Show = (Ball@ a) {
  Strs[Str|'Ball@(pos=',
    /Pinball/Vec%.Show(a.pos), Str|', vel=',
    /Pinball/Vec%.Show(a.vel), Str|', radius=',
    /Pinball/Num%.Show(a.radius), Str|')'];
};

@(Ball@, Move, Eq, Show);

Using Fble on Windows
=====================
Via cygwin.

1. Install ninja.
Easy enough.

2. Install bison.
Easy enough.

3. Compiler warning in SizeofSanitizedString. Interesting.

  for (const char* p = str; *p != '\0'; p++) {
    size += isalnum(*p) ? 1 : 4;

fble/lib/generate_aarch64.c|1269 col 21| error: array subscript has type ‘char’ [-Werror=char-subscripts]

Looks like we need to be explicit about the conversion from const char to
whatever isalnum expects. What does isalnum expect? Or is the issue that char
is signed? Oh. Internally isalnum is a macro that uses the argument as an
index? So negative is bad.

The header file has a comment saying the warning is intentional in this case.
Looks like I need to cast to unsigned char?

Yeah. That fixes it. Hopefully that works too on linux.

4. We don't have aarch64.

Let's see if I can hack something up to start. Then clean it up.

Looks like best place to handle this is in spec-test.run.tcl. Skip running the
compiled part of the tests if architecture is not supported.

There are some other compiled tests though, not just spec tests. I should mark
those as skipped if possible, rather than just not compiling them?

5. -lGL cannot be found. Let's install that?
Yes.

And that's all I need for the compile to go through. Can I try running the
invaders game to see if it works? At least in interpreted mode?

I get an error from SDL: unable to initialize video device. Oh well. Also,
memory leak in that case.

How about md5sum? Totally works. Though I need to update the usage info for
md5 to point to the right example module /Md5/Main%.

---

Next steps:
1. Decide how to cleanly handle build with different architectures.
2. Figure out why sdl doesn't work on windows.

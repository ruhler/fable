
@ App@ = /App%.App@;
@ Event@ = /App%.Event@;
@ Effect@ = /App%.Effect@;

% True = /Bool%.True;
% False = /Bool%.False;

@ Drawing@ = /Drawing%.Drawing@;
@ Point@ = /Drawing%.Point@;
% Color = /Drawing%.Color;
% Drawings = /Drawing%.Drawings;
% Over = /Drawing%.Over;
% Rect = /Drawing%.Rect;
% Affine = /Drawing%.Affine;

@ Vec@ = /Graphics/3D%.Vec@;

@ Camera@ = /Graphics/Camera%.Camera@;
% Camera = /Graphics/Camera%.Camera;
% Translate = /Graphics/Camera%.Translate;
% RotateY = /Graphics/Camera%.RotateY;
% Focus = /Graphics/Camera%.Focus;
% Triangle = /Graphics/Camera%.Triangle;
% Vertex = /Graphics/Camera%.Vertex;

@ Int@ = /Int/Int%.Int@;
% Neg = /Int/Int%.Neg;

% Int = /Int/Int/Lit%.Int;

<@>@ Get@ = /Process%.Get@;
<@>@ Put@ = /Process%.Put@;

@ Unit@ = /Unit%.Unit@;
% Unit = /Unit%.Unit;

@ State@ = Camera@;

State@ Initial = Camera(Int|10);

(State@) { Drawing@; } Draw = (State@ camera) {
  Vec@ 00 = Vertex(camera, Vec@(Int|0, Neg(Int|10), Int|20));
  Vec@ 10 = Vertex(camera, Vec@(Int|5, Neg(Int|10), Int|20));
  Vec@ 20 = Vertex(camera, Vec@(Int|10, Neg(Int|10), Int|20));
  Vec@ 30 = Vertex(camera, Vec@(Int|15, Neg(Int|10), Int|20));
  Vec@ 40 = Vertex(camera, Vec@(Int|20, Neg(Int|10), Int|20));

  Vec@ 01 = Vertex(camera, Vec@(Int|0, Neg(Int|10), Int|25));
  Vec@ 11 = Vertex(camera, Vec@(Int|5, Neg(Int|10), Int|25));
  Vec@ 21 = Vertex(camera, Vec@(Int|10, Neg(Int|10), Int|25));
  Vec@ 31 = Vertex(camera, Vec@(Int|15, Neg(Int|10), Int|25));
  Vec@ 41 = Vertex(camera, Vec@(Int|20, Neg(Int|10), Int|25));

  Vec@ 02 = Vertex(camera, Vec@(Int|0, Neg(Int|10), Int|30));
  Vec@ 12 = Vertex(camera, Vec@(Int|5, Neg(Int|10), Int|30));
  Vec@ 22 = Vertex(camera, Vec@(Int|10, Neg(Int|10), Int|30));
  Vec@ 32 = Vertex(camera, Vec@(Int|15, Neg(Int|10), Int|30));
  Vec@ 42 = Vertex(camera, Vec@(Int|20, Neg(Int|10), Int|30));

  Vec@ 03 = Vertex(camera, Vec@(Int|0, Neg(Int|10), Int|35));
  Vec@ 13 = Vertex(camera, Vec@(Int|5, Neg(Int|10), Int|35));
  Vec@ 23 = Vertex(camera, Vec@(Int|10, Neg(Int|10), Int|35));
  Vec@ 33 = Vertex(camera, Vec@(Int|15, Neg(Int|10), Int|35));
  Vec@ 43 = Vertex(camera, Vec@(Int|20, Neg(Int|10), Int|35));

  Drawings[
    Triangle(camera, 00, 01, 10, Color.Red),
    Triangle(camera, 10, 01, 11, Color.Green),
    Triangle(camera, 10, 11, 20, Color.Red),
    Triangle(camera, 20, 11, 21, Color.Green),
    Triangle(camera, 20, 21, 30, Color.Red),
    Triangle(camera, 30, 21, 31, Color.Green),
    Triangle(camera, 30, 31, 40, Color.Red),
    Triangle(camera, 40, 31, 41, Color.Green),

    Triangle(camera, 01, 02, 11, Color.Red),
    Triangle(camera, 11, 02, 12, Color.Green),
    Triangle(camera, 11, 12, 21, Color.Red),
    Triangle(camera, 21, 12, 22, Color.Green),
    Triangle(camera, 21, 22, 31, Color.Red),
    Triangle(camera, 31, 22, 32, Color.Green),
    Triangle(camera, 31, 32, 41, Color.Red),
    Triangle(camera, 41, 32, 42, Color.Green),

    Triangle(camera, 02, 03, 12, Color.Red),
    Triangle(camera, 12, 03, 13, Color.Green),
    Triangle(camera, 12, 13, 22, Color.Red),
    Triangle(camera, 22, 13, 23, Color.Green),
    Triangle(camera, 22, 23, 32, Color.Red),
    Triangle(camera, 32, 23, 33, Color.Green),
    Triangle(camera, 32, 33, 42, Color.Red),
    Triangle(camera, 42, 33, 43, Color.Green)
  ];
};

(Get@<Event@>, Put@<State@>, Unit@!, State@) { Unit@!; }
Run = (Get@<Event@> in, Put@<State@> draw, Unit@! tick, State@ state) {
  Event@ e := in;

  e.?(tick: {
    Unit@ _ := tick;
    Unit@ _ := draw(state);
    Run(in, draw, tick, state);
  });

  e.?(key_down: {
    e.key_down.?(q: !(Unit));

    State@ new_state = e.key_down.?(
      a: Translate(Neg(Int|1), Int|0, Int|0, state),
      d: Translate(Int|1, Int|0, Int|0, state),
      j: Focus(Int|1, state),
      k: Focus(Neg(Int|1), state),
      s: Translate(Int|0, Int|0, Neg(Int|1), state),
      w: Translate(Int|0, Int|0, Int|1, state),

      left: RotateY(False, state),
      right: RotateY(True, state),
      : state);
    Run(in, draw, tick, new_state);
  });
  Run(in, draw, tick, state);
};

App@ Main = (Int@ width, Int@ height, Get@<Event@> in, Put@<Effect@> out) {
  # The window should be centered at (0, 0), ranging in from
  # (-32, -24) to (32, 24).
  Point@ a = @(x: Int|10, y: Neg(Int|10));
  Point@ b = @(x: Int|320, y: Int|240);

  # The target is 60 FPS, or 16 millseconds per frame.
  Int@ frame_period = Int|16;
  Unit@! tick = out(Effect@(tick: frame_period));

  (State@) { Unit@!; } draw = (State@ s) {
    out(Effect@(draw: Over(
      Rect(Int|0, Int|0, width, height, Color.Black),
      Affine(a, b, Draw(s)))));
  };

  Unit@ _ := out(Effect@(tick: Int|0));
  Run(in, draw, tick, Initial); 
};

Main;


@ Int@ = /Int%.Int@;
% Add = /Int%.Add;
% Sub = /Int%.Sub;
% Mul = /Int%.Mul;
% Div = /Int/Div%.Div;

# Vec@ --
#   A 3 element vector.
@ Vec@ = *(Int@ x, Int@ y, Int@ z);

# AddV --
#   Vector addition.
(Vec@, Vec@) { Vec@; } AddV = (Vec@ a, Vec@ b) {
  Vec@(Add(a.x, b.x), Add(a.y, b.y), Add(a.z, b.z));
};

# SubV --
#   Vector subtraction.
(Vec@, Vec@) { Vec@; } SubV = (Vec@ a, Vec@ b) {
  Vec@(Sub(a.x, b.x), Sub(a.y, b.y), Sub(a.z, b.z));
};

# MulVS --
#   Multiply a vector by a scalar.
(Vec@, Int@) { Vec@; } MulVS = (Vec@ a, Int@ s) {
  Vec@(Mul(a.x, s), Mul(a.y, s), Mul(a.z, s));
};

# DivVS --
#   Divide a vector by a scalar.
(Vec@, Int@) { Vec@; } DivVS = (Vec@ a, Int@ s) {
  Vec@(Div(a.x, s).q, Div(a.y, s).q, Div(a.z, s).q);
};

# Mat@ --
#   A 3x3 matrix.
@ Mat@ = *(Vec@ i, Vec@ j, Vec@ k);

# MulMV --
#   Multiply a matrix by a vector.
(Mat@, Vec@) { Vec@; } MulMV = (Mat@ m, Vec@ a) {
  Vec@(
    Add(Mul(m.i.x, a.x), Add(Mul(m.j.x, a.y), Mul(m.k.x, a.z))),
    Add(Mul(m.i.y, a.x), Add(Mul(m.j.y, a.y), Mul(m.k.y, a.z))),
    Add(Mul(m.i.z, a.x), Add(Mul(m.j.z, a.y), Mul(m.k.z, a.z))));
};

# MulMM --
#   Multiply a matrix by a matrix.
(Mat@, Mat@) { Mat@; } MulMM = (Mat@ a, Mat@ b) {
  Mat@(MulMV(a, b.i), MulMV(a, b.j), MulMV(a, b.k));
};

# DivMS --
#   Divide a matrix by a scalar.
(Mat@, Int@) { Mat@; } DivMS = (Mat@ a, Int@ s) {
  Mat@(DivVS(a.i, s), DivVS(a.j, s), DivVS(a.k, s));
};

# Transpose --
#   Transpose of a matrix.
(Mat@) { Mat@; } Transpose = (Mat@ m) {
  Mat@(
    Vec@(m.i.x, m.j.x, m.k.x),
    Vec@(m.i.y, m.j.y, m.k.y),
    Vec@(m.i.z, m.j.z, m.k.z));
};

@(Vec@, Mat@, AddV, SubV, MulVS, DivVS, DivMS, MulMV, MulMM, Transpose);


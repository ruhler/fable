
% True = /Core/Bool%.True;
% False = /Core/Bool%.False;

<@>@ Eq@ = /Core/Eq%.Eq@;

@ Int@ = /Core/Int%.Int@;

<@>@ List@ = /Core/List%.List@;

<@>@ PureResult@ = /Core/Stdio/Pure%.PureResult@;
@ PureState@ = /Core/Stdio/Pure%.PureState@;
@ MainResult@ = /Core/Stdio/Pure%.MainResult@;

Eq@<List@<Int@>> Ints = /Core/List/Eq%.Eq(/Core/Int/Eq%.Eq);

Eq@<PureState@> PureState = (PureState@ a, PureState@ b) {
  Ints(a.in, b.in).?(false: False);
  Ints(a.out, b.out).?(false: False);
  Ints(a.err, b.err).?(false: False);
  True;
};

<@ A@>(Eq@<A@>) { Eq@<PureResult@<A@>>; }
PureResult = <@ A@>(Eq@<A@> eq, PureResult@<A@> a, PureResult@<A@> b) {
  PureState(a.s, b.s).?(false: False);
  eq(a.x, b.x).?(false: False);
  True;
};

Eq@<MainResult@> MainResult = (MainResult@ a, MainResult@ b) {
  /Core/Bool/Eq%.Eq(a.exit, b.exit).?(false: False);
  Ints(a.in, b.in).?(false: False);
  Ints(a.out, b.out).?(false: False);
  Ints(a.err, b.err).?(false: False);
  True;
};

@(PureState, PureResult, MainResult);

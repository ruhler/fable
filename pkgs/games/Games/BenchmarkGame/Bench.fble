
<@>% List = /Core/List%.List;

<@>% Nothing = /Core/Maybe%.Nothing;

<@>@ Pure@ = /Core/Monad/Pure%.Pure@;
% Pure = /Core/Monad/Pure%.Pure;

<<@>@>@ Stdio@ = /Core/Stdio%.Stdio@;
<<@>@>@ Main@ = /Core/Stdio%.Main@;

@ String@ = /Core/String%.String@;
% Str = /Core/String%.Str;

@ Unit@ = /Core/Unit%.Unit@;
% Unit = /Core/Unit%.Unit;

(Main@, String@) { Unit@; } RunBench = (Main@ game, String@ n) {
  Stdio@<Pure@> stdio = @(
    in: Nothing<String@>,
    out: (String@ _) { Unit; },
    err: (String@ _) { Unit; });
  game<Pure@>(Pure, stdio, List<String@>[n]).true;
};

# Benchmark for the benchmark games that takes about 1 minute to run.
Unit@! Bench = {
  Unit@ _pidigits := !(RunBench(/Games/BenchmarkGame/PiDigits%.Main, Str|22));
  Unit@ _binarytrees := !(RunBench(/Games/BenchmarkGame/BinaryTrees%.Main, Str|14));
  !(Unit);
};

@(Bench);

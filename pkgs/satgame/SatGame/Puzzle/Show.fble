
<@>@ Show@ = /Core/Show%.Show@;

@ String@ = /Core/String%.String@;
% Join = /Core/String%.Join;
% Lines = /Core/String%.Lines;
% Str = /Core/String%.Str;
% Strs = /Core/String%.Strs;

@ Literal@ = /SatGame/Puzzle%.Literal@;
@ Clause@ = /SatGame/Puzzle%.Clause@;
@ Puzzle@ = /SatGame/Puzzle%.Puzzle@;
@ Params@ = /SatGame/Puzzle%.Params@;

Show@<Literal@> Literal = (Literal@ literal) {
  String@ sign = literal.pos.?(true: Str|'+', false: Str|'-');
  Strs[sign, /Core/Int/Show%.Show(literal.var)];
};

Show@<Clause@> Clause = (Clause@ clause) {
  Join(/Core/List%.Map(clause, Literal), Str|' ');
};

Show@<Puzzle@> Puzzle = (Puzzle@ puzzle) {
  Lines(/Core/List%.Map(puzzle, Clause));
};

Show@<Params@> Params = (Params@ params) {
  Strs[
    Str|'Vars: ', /Core/Int/Show%.Show(params.num_vars), Str|', ',
    Str|'Clauses: ', /Core/Int/Show%.Show(params.num_clauses), Str|', ',
    Str|'Vars Per Clause: ', /Core/Int/Show%.Show(params.num_literals_per_clause)];
};

@(Literal, Clause, Puzzle, Params);


<@>@ List@ = /List%.List@;
@ Structure@ = /Structure%.Structure@;
% Struct = /Structure/Struct%.Struct;
% Enum = /Structure/Union%.Enum;
% Union = /Structure/Union%.Union;
<@>@ Structured@ = /Structured%.Structured@;

# Structured --
#   An instance of Structured@ for List@.
<@ T@>(Structured@<T@>) { Structured@<List@<T@>>; }
Structured = <@ T@>(Structured@<T@> s)(List@<T@> list) {
  list.?(
    cons: {
      Structure@ cons = Struct[
        s(list.cons.head),
        Structured<T@>(s)(list.cons.tail)
      ];
      Union|0(cons);
    },
    nil: Enum|1);
};

@(Structured);

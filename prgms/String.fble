
@ Char@ = /Char%.Char@;

<@>@ List@ = /List%.List@;
<@>% List = /List%.List;

<@,@>@ Lit@ = /Literal%.Lit@;

# String@ --
#   A character string.
@ String@ = List@<Char@>;

# CharLit@ --
#   A character string literal.
#
# Example Use:
#   CharLit@ chars = Chars|'hello, world'
<@>@ CharLit@ = Lit@<Char@>;

# Str --
#   Creates a string from a character string literal.
#
# Inputs:
#   lit - the string literal.
#
# Example Use:
#   String@ s = Str(Chars|'hello, world')
(CharLit@) { List@<Char@>; } Str = (CharLit@ lit) {
  List<Char@>(lit);
};

# Concat --
#   Concatenates a list of strings together.
(List@<String@>) { String@; } Concat = /List%.Concat<Char@>;

@(String@, CharLit@, Str, Concat);

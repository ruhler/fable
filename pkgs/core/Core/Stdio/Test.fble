
% True = /Core/Bool%.True;

<@>@ List@ = /Core/List%.List@;

<<@>@>@ Monad@ = /Core/Monad%.Monad@;

<<@>@>@ Stdio@ = /Core/Stdio%.Stdio@;
<<@>@>@ Main@ = /Core/Stdio%.Main@;

@ String@ = /Core/String%.String@;
% Str = /Core/String%.Str;

@ Unit@ = /Core/Unit%.Unit@;


Main@ Test = <<@>@ M@>(Monad@<M@> m, Stdio@<M@> stdio) {
  % S = /Core/Stdio/Stdio%(m, stdio);
  
  (List@<String@> args) {
    # Output a single line to test that we don't drop trailing outputs.
    Unit@ _ <- m.do(S.PutLine(S.Stdout, Str|'PASSED'));
    m.return(True);
  };
};

/Core/Stdio/IO%.Run(Test);

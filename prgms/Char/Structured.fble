
@ Char@ = /Char%.Char@;
% Enum = /Structure/Union%.Enum;
% Tag = /Structure/Union%.Tag;
<@>@ Structured@ = /Structured%.Structured@;

# Structured@ --
#   Implementation of Structured@@ for Char@.
#
# Note:
#   To keep things simple, we use ASCII codes to represent the structure of a
#   character.
Structured@<Char@> Structured = (Char@ c) {
  c.?(
    nl:   Enum(Tag|00001010),
    '	':  Enum(Tag|00001001),
    ' ':  Enum(Tag|00100000),
    '!':  Enum(Tag|00100001),
    '"':  Enum(Tag|00100010),
    '#':  Enum(Tag|00100011),
    '$':  Enum(Tag|00100100),
    '%':  Enum(Tag|00100101),
    '&':  Enum(Tag|00100110),
    '''': Enum(Tag|00100111),
    '(':  Enum(Tag|00101000),
    ')':  Enum(Tag|00101001),
    '*':  Enum(Tag|00101010),
    '+':  Enum(Tag|00101011),
    ',':  Enum(Tag|00101100),
    '-':  Enum(Tag|00101101),
    '.':  Enum(Tag|00101110),
    '/':  Enum(Tag|00101111),
    0:    Enum(Tag|00110000),
    1:    Enum(Tag|00110001),
    2:    Enum(Tag|00110010),
    3:    Enum(Tag|00110011),
    4:    Enum(Tag|00110100),
    5:    Enum(Tag|00110101),
    6:    Enum(Tag|00110110),
    7:    Enum(Tag|00110111),
    8:    Enum(Tag|00111000),
    9:    Enum(Tag|00111001),
    ':':  Enum(Tag|00111010),
    ';':  Enum(Tag|00111011),
    '<':  Enum(Tag|00111100),
    '=':  Enum(Tag|00111101),
    '>':  Enum(Tag|00111110),
    '?':  Enum(Tag|00111111),
    '@':  Enum(Tag|01000000),
    A:    Enum(Tag|01000001),
    B:    Enum(Tag|01000010),
    C:    Enum(Tag|01000011),
    D:    Enum(Tag|01000100),
    E:    Enum(Tag|01000101),
    F:    Enum(Tag|01000110),
    G:    Enum(Tag|01000111),
    H:    Enum(Tag|01001000),
    I:    Enum(Tag|01001001),
    J:    Enum(Tag|01001010),
    K:    Enum(Tag|01001011),
    L:    Enum(Tag|01001100),
    M:    Enum(Tag|01001101),
    N:    Enum(Tag|01001110),
    O:    Enum(Tag|01001111),
    P:    Enum(Tag|01010000),
    Q:    Enum(Tag|01010001),
    R:    Enum(Tag|01010010),
    S:    Enum(Tag|01010011),
    T:    Enum(Tag|01010100),
    U:    Enum(Tag|01010101),
    V:    Enum(Tag|01010110),
    W:    Enum(Tag|01010111),
    X:    Enum(Tag|01011000),
    Y:    Enum(Tag|01011001),
    Z:    Enum(Tag|01011010),
    '[':  Enum(Tag|01011011),
    '\':  Enum(Tag|01011100),
    ']':  Enum(Tag|01011101),
    '^':  Enum(Tag|01011110),
    '_':  Enum(Tag|01011111),
    '`':  Enum(Tag|01100000),
    a:    Enum(Tag|01100001),
    b:    Enum(Tag|01100010),
    c:    Enum(Tag|01100011),
    d:    Enum(Tag|01100000),
    e:    Enum(Tag|01100001),
    f:    Enum(Tag|01100010),
    g:    Enum(Tag|01100011),
    h:    Enum(Tag|01101000),
    i:    Enum(Tag|01101001),
    j:    Enum(Tag|01101010),
    k:    Enum(Tag|01101011),
    l:    Enum(Tag|01101100),
    m:    Enum(Tag|01101101),
    n:    Enum(Tag|01101110),
    o:    Enum(Tag|01101111),
    p:    Enum(Tag|01110000),
    q:    Enum(Tag|01110001),
    r:    Enum(Tag|01110010),
    s:    Enum(Tag|01110011),
    t:    Enum(Tag|01110100),
    u:    Enum(Tag|01110101),
    v:    Enum(Tag|01110110),
    w:    Enum(Tag|01110111),
    x:    Enum(Tag|01111000),
    y:    Enum(Tag|01111001),
    z:    Enum(Tag|01111010),
    '{':  Enum(Tag|01111011),
    '|':  Enum(Tag|01111100),
    '}':  Enum(Tag|01111101),
    '~':  Enum(Tag|01111110));
};

@(Structured);


@ Decimal@ = /Digits%.Decimal@;

@ Drawing@ = /Drawing%.Drawing@;
% Blank = /Drawing%.Blank;
% Drawings = /Drawing%.Drawings;
% Translate = /Drawing%.Translate;

@ Int@ = /Int/Int%.Int@;
% Add = /Int/Int%.Add;
% Div = /Int/Int/Div%.Div;
% LeastSignificantDigit = /Int/Int/Digits%.LeastSignificantDigit;

% Int = /Int/Int/Lit%.Int;

% Graphics = /Invaders/Graphics%;

% Aliens = /Invaders/Aliens%;
@ Aliens@ = Aliens.Aliens@;

% Bullet = /Invaders/Bullet%;
@ Bullet@ = Bullet.Bullet@;

% Ship = /Invaders/Ship%;
@ Dir@ = Ship.Dir@;
@ Ship@ = Ship.Ship@;

% Ufo = /Invaders/Ufo%;
@ Ufo@ = Ufo.Ufo@;

<@>@ Maybe@ = /Maybe%.Maybe@;

@ Unit@ = /Unit%.Unit@;
% Unit = /Unit%.Unit;


@ Lives@ = +(Unit@ 0, Unit@ 1, Unit@ 2, Unit@ 3);

@ Game@ = *(
  Int@ score,
  Lives@ lives,
  Ship@ ship,
  Bullet@ bullet,
  Aliens@ aliens,
  Ufo@ ufo
);

@ Input@ = +(Dir@ dir, Unit@ fire);

Game@ Initial = @(
  score: Int|0,
  lives: Lives@(3: Unit),
  ship: Ship.Initial,
  bullet: Bullet.Initial,
  aliens: Aliens.Initial,
  ufo: Ufo.Initial
);

(Game@) { Game@; } Tick = (Game@ g) {
  Game@ g_ = Game@(g.score, g.lives,
    Ship.Tick(g.ship), Bullet.Tick(g.bullet),
    Aliens.Tick(g.aliens), Ufo.Tick(g.ufo));
  Game@ g = g_;

  # Check for bullet colliding with an alien.
  Game@ g_ = {
    g.bullet.live.?(false: g);
    Maybe@<Aliens.Kill@> kill = Aliens.Shoot(g.bullet.x, g.bullet.y, g.aliens);
    kill.?(nothing: g);
    Game@(Add(kill.just.points, g.score), g.lives,
      g.ship, Bullet.Initial,
      kill.just.aliens, g.ufo);
  };
  Game@ g = g_;

  # Check for bullet colliding with ufo.
  Game@ g_ = {
    g.bullet.live.?(false: g);
    Maybe@<Ufo.Kill@> kill = Ufo.Shoot(g.bullet.x, g.bullet.y, g.ufo);
    kill.?(nothing: g);
    Game@(Add(kill.just.points, g.score), g.lives,
      g.ship, Bullet.Initial, g.aliens, kill.just.ufo);
  };
  Game@ g = g_;

  g;
};

(Game@, Input@) { Game@; } Input = (Game@ g, Input@ input) {
  Game@(g.score, g.lives,
    input.?(dir: Ship.Input(g.ship, input.dir), : g.ship),
    input.?(fire: Bullet.Fire(g.bullet, g.ship), : g.bullet),
    g.aliens, g.ufo);
};

(Int@) { Drawing@; } DrawScore = {
  Int@ 10 = Int|10;

  (Int@ score) {
    # We only print 4 digits for the score.
    Int@ s1000 = score;
    Int@ s100 = Div(s1000, 10);
    Int@ s10 = Div(s100, 10);
    Int@ s1 = Div(s10, 10);
    Decimal@ d0 = LeastSignificantDigit(s1000);
    Decimal@ d1 = LeastSignificantDigit(s100);
    Decimal@ d2 = LeastSignificantDigit(s10);
    Decimal@ d3 = LeastSignificantDigit(s1);
    Translate(Int|40, Int|220, Graphics.Digits[d3, d2, d1, d0]);
  };
};

(Lives@) { Drawing@; } DrawLives = {
  Drawing@ l1 = Translate(Int|160, Int|220, Graphics.Ship);
  Drawing@ l2 = Translate(Int|180, Int|220, Graphics.Ship);
  Drawing@ l3 = Translate(Int|200, Int|220, Graphics.Ship);
  (Lives@ l) {
    l.?(
      0: Blank,
      1: Drawings[l1],
      2: Drawings[l1, l2],
      3: Drawings[l1, l2, l3]);
  };
};

(Game@) { Drawing@; } Draw = (Game@ g) {
  Drawings[
    DrawScore(g.score),
    DrawLives(g.lives),
    Graphics.Background,
    Ship.Draw(g.ship),
    Bullet.Draw(g.bullet),
    Aliens.Draw(g.aliens),
    Ufo.Draw(g.ufo)
  ];
};

@(Game@, Input@, Initial, Input, Tick, Draw);


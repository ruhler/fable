
@ Bool@ = /Core/Bool%.Bool@;
% True = /Core/Bool%.True;
% False = /Core/Bool%.False;

@ Int@ = /Int%.Int@;

% EqP = /Int/IntP/Eq%.Eq;
% LtP = /Int/IntP/Eq%.Lt;
% LeP = /Int/IntP/Eq%.Le;
% GtP = /Int/IntP/Eq%.Gt;
% GeP = /Int/IntP/Eq%.Ge;

(Int@) { Bool@; } IsZero = (Int@ x) {
  x.?(0: True, : False);
};

(Int@, Int@){ Bool@; } Eq = (Int@ a, Int@ b) {
  a.?(
    n: b.?(n: EqP(a.n, b.n),  0: False, p: False),
    0: b.?(n: False, 0: True,  p: False),
    p: b.?(n: False, 0: False, p: EqP(a.p, b.p)));
};

(Int@, Int@) { Bool@; } Lt = (Int@ a, Int@ b) {
  a.?(
      n: b.?(n: LtP(b.n, a.n), 0: True, p: True),
      0: b.?(n: False, 0: False, p: True),
      p: b.?(n: False, 0: False, p: LtP(a.p, b.p)));
};

(Int@, Int@){ Bool@; } Le = (Int@ a, Int@ b) {
  a.?(
      n: b.?(n: LeP(b.n, a.n), 0: True, p: True),
      0: b.?(n: False, 0: True, p: True),
      p: b.?(n: False, 0: False, p: LeP(a.p, b.p)));
};

(Int@, Int@){ Bool@; } Gt = (Int@ a, Int@ b) {
  a.?(
      n: b.?(n: GtP(b.n, a.n), 0: False, p: False),
      0: b.?(n: True, 0: False, p: False),
      p: b.?(n: True, 0: True, p: GtP(a.p, b.p)));
};

(Int@, Int@){ Bool@; } Ge = (Int@ a, Int@ b) {
  a.?(
      n: b.?(n: GeP(b.n, a.n), 0: False, p: False),
      0: b.?(n: True, 0: True, p: False),
      p: b.?(n: True, 0: True, p: GeP(a.p, b.p)));
};

(Int@, Int@) { Int@; } Max = (Int@ a, Int@ b) {
  Lt(a, b).?(true: b, false: a);
};

(Int@, Int@) { Int@; } Min = (Int@ a, Int@ b) {
  Lt(a, b).?(true: a, false: b);
};

@(IsZero, Eq, Lt, Le, Gt, Ge, Max, Min);


# @@fble-test@@ compile-error 32:3

@ Unit@ = *();
% Unit = Unit@();

@ Bool@ = +(Unit@ true, Unit@ false);

<<@>@,@>@ S@ = @< <<@>@ M1@, @ K1@> {
  <@ V1@>(M1@<V1@>) { Bool@; } IsEmpty;
  @(M@: M1@, K@: K1@, IsEmpty);
}>;

<<@>@,@>% F = <<@>@ M2@, @ K2@>(S@<M2@, K2@> _s) {
  Unit;
};

% S = {
  @ K3@ = Unit@;
  <@>@ M3@ = <@ T@> {
    @ N@ = +(K3@ k, N@ n);
    N@;
  };
  <@ V3@>(M3@<V3@>) { Bool@; } IsEmpty;
    
  S@<M3@, K3@> x = @(M@: M3@, K@: K3@, IsEmpty);
  x;
};

# Type inference is not expected to work here, because the type system cannot
# reasonable deduce that the abstract M1@<V1@> argument to the IsEmpty
# function is equal to the concrete +(K3@ k, N@ n) in the S instance of S@.
F(S);

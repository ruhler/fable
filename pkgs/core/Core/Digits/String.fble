
@ Bit@ = /Core/Digits%.Bit@;
@ Hex@ = /Core/Digits%.Hex@;

<@>@ List@ = /Core/List%.List@;
<@>% List = /Core/List%.List ;
<@>% Concat = /Core/List%.Concat;
<@,@>% Map = /Core/List%.Map;

# A literal spec for a list of binary digits.
(List@<Bit@>) { List@<Bit@>; } BitStr = List<Bit@>;

# A literal spec for a list of hex digits.
(List@<Hex@>) { List@<Hex@>; } HexStr = List<Hex@>;

# HexToBits --
#   Convert a string of hex digits to a string of binary digits.
(List@<Hex@>) { List@<Bit@>; } HexToBits = (List@<Hex@> hex) {
  Concat<Bit@>(Map<Hex@, List@<Bit@>>(hex, (Hex@ h) {
    h.?(
        0: BitStr|0000, 1: BitStr|0001, 2: BitStr|0010, 3: BitStr|0011,
        4: BitStr|0100, 5: BitStr|0101, 6: BitStr|0110, 7: BitStr|0111,
        8: BitStr|1000, 9: BitStr|1001, A: BitStr|1010, B: BitStr|1011,
        C: BitStr|1100, D: BitStr|1101, E: BitStr|1110, F: BitStr|1111);
  }));
};

@(BitStr, HexStr, HexToBits);


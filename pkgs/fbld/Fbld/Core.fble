
% Str = /Core/String%.Str;

@ Loc@ = /Fbld/Loc%.Loc@;

<@>@ Fbld@ = /Fbld/Fbld%.Fbld@;

@ Markup@ = /Fbld/Markup%.Markup@;
% Entry = /Fbld/Markup%.Entry;
% Entries = /Fbld/Markup%.Entries;

% Utils = /Fbld/Invoke/Utils%;

@ Text@ = /Fbld/Text%.Text@;

# Core document interface.
@ Core@ = *(
  # @text[ESCAPED text]
  # An explicit tag for default inline text.
  # @param text  The text to unescape.
  (Loc@, Text@) { Fbld@<Text@>; } text,

  # @l[ESCAPED text]
  # A literal string.
  # The text is highlighted as bold or monospace font, for example.
  # @param text  The text to highlith.
  (Loc@, Text@) { Fbld@<Text@>; } l,

  # @a[ESCAPED text]
  # An argument.
  # The text is highlighted using italics, for example.
  # @param text  The text to highlight.
  (Loc@, Text@) { Fbld@<Text@>; } a,

  # @label[ESCAPED id][INLINE text]
  # Give a label to a point in the text.
  # For use as a target of local or external references.
  # @param id  The id to use for the lable.
  # @param text  The text to display for the label target.
  (Loc@, Text@, Fbld@<Text@>) { Fbld@<Text@>; } label,

  # @ref[ESCAPED id][INLINE caption]
  # Refer to a locally defined label.
  # @param id  The id of a @label to link to.
  # @param caption  Text to display.
  (Loc@, Text@, Fbld@<Text@>) { Fbld@<Text@>; } ref,

  # @url[ESCAPED url][? INLINE text]
  # Reference a url.
  # @param url  The target url.
  # @param text  Optional text to display. Defaults to the url.
  (Loc@, Text@, Fbld@<Text@>) { Fbld@<Text@>; } url,

  # @file[ESCAPED file][? INLINE text]
  # Reference a file on disk.
  # @param file  The path to the file.
  # @param text  Optional text to display. Defaults to the file.
  (Loc@, Text@, Fbld@<Text@>) { Fbld@<Text@>; } file,

  # @fbld[ESCAPED file][? INLINE text]
  # Reference to another fbld based document.
  # @param file  The path to the fbld file, optionally followed by #<id>.
  # @param text  Optional text to display. Defaults to the file.
  (Loc@, Text@, Fbld@<Text@>) { Fbld@<Text@>; } fbld,

  # @par[INLINE text]
  # A paragraph of text.
  # @param text  The body of the paragraph.
  (Loc@, Fbld@<Text@>) { Fbld@<Text@>; } par,

  # @item[BLOCK text]
  # A list item.
  # @param text  The text of the item.
  (Loc@, Fbld@<Text@>) { Fbld@<Text@>; } item,

  # @code[ESCAPED language][ESCAPED text]
  # A source code listing.
  # @param language  The lanuage, e.g. c, python, sh, fble, vim, etc.
  # @param text  The source code text.
  (Loc@, Text@, Text@) { Fbld@<Text@>; } code,

  # @def[INLINE name][INLINE value]
  # A short form definition of a term.
  # @param name  The term to define.
  # @param value  The definition of the term.
  (Loc@, Fbld@<Text@>, Fbld@<Text@>) { Fbld@<Text@>; } def,

  # @definition[INLINE name][BLOCK value]
  # A long form definition of a term.
  # @param name  The term to define.
  # @param value  The definition of the term.
  (Loc@, Fbld@<Text@>, Fbld@<Text@>) { Fbld@<Text@>; } definition,

  # @section[INLINE title][BLOCK body]
  #  A top level section.
  #  @arg[title] The tile of the section.
  #  @arg[body] The contents of the section.
  (Loc@, Fbld@<Text@>, Fbld@<Text@>) { Fbld@<Text@>; } section,

  # @subsection[INLINE title][BLOCK body]
  # A second level section.
  # @param title  The tile of the section.
  # @param body  The contents of the section.
  (Loc@, Fbld@<Text@>, Fbld@<Text@>) { Fbld@<Text@>; } subsection,

  # @subsubsection[INLINE title][BLOCK body]
  # A third level section.
  # @param title  The tile of the section.
  # @param body  The contents of the section.
  (Loc@, Fbld@<Text@>, Fbld@<Text@>) { Fbld@<Text@>; } subsubsection,

  # @doc[INLINE title][BLOCK body]
  # Top level entry point for a generic document.
  # @param title  The title of the document.
  # @param body  The contents of the document.
  (Loc@, Fbld@<Text@>, Fbld@<Text@>) { Fbld@<Text@>; } doc
);

(Core@) { Markup@; } Markup = (Core@ core) {
  Entries[
    Entry(Str|'.inline', Utils.LE(core.text)),
    Entry(Str|'text', Utils.LE(core.text)),
    Entry(Str|'l', Utils.LE(core.l)),
    Entry(Str|'a', Utils.LE(core.a)),
    Entry(Str|'label', Utils.LEI(core.label)),
    Entry(Str|'ref', Utils.LEI(core.ref)),
    Entry(Str|'url', Utils.LEmI(core.url)),
    Entry(Str|'file', Utils.LEmI(core.file)),
    Entry(Str|'fbld', Utils.LEmI(core.fbld)),

    Entry(Str|'.block', Utils.LI(core.par)),
    Entry(Str|'par', Utils.LI(core.par)),
    Entry(Str|'item', Utils.LB(core.item)),
    Entry(Str|'code', Utils.LEE(core.code)),
    Entry(Str|'def', Utils.LII(core.def)),
    Entry(Str|'definition', Utils.LIB(core.definition)),
    Entry(Str|'section', Utils.LIB(core.section)),
    Entry(Str|'subsection', Utils.LIB(core.subsection)),
    Entry(Str|'subsubsection', Utils.LIB(core.subsubsection)),
    Entry(Str|'doc', Utils.LIB(core.doc))
  ];
};

@(Core@, Markup);

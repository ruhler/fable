
% True = /Core/Bool%.True;

@ Char@ = /Core/Char%.Char@;

<@>@ List@ = /Core/List%.List@;
<@>% Concat = /Core/List%.Concat;

<<@>@>@ Monad@ = /Core/Monad%.Monad@;

<<@>@>@ Stdio@ = /Core/Stdio%.Stdio@;
<<@>@>@ Main@ = /Core/Stdio%.Main@;

@ String@ = /Core/String%.String@;
% Str = /Core/String%.Str;

@ Unit@ = /Core/Unit%.Unit@;


Main@ Main = <<@>@ M@>(Monad@<M@> m, Stdio@<M@> stdio)(List@<String@> _args) {
  % O = /Core/Stream/OStream%(m);

  (List@<String@>) { M@<Unit@>; } Puts = (List@<String@> strs) {
    O.PutLine(stdio.out, Concat<Char@>(strs));
  };
  
  Unit@ _ <- m.do(Puts[Str|'hello, world']);
  m.return(True);
};

/Core/Stdio/IO%.Run(Main);

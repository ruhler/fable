interf ListI {
  import @ { UnitM; FunctionI; };
  import UnitM { Unit; };

  # P - A list of 1 or more elements: T+
  struct P<type T>(T head, S<T> tail);

  # S - A list of 0 or more elements: T*
  union S<type T>(P<T> cons, Unit nil); 

  # InitP - Return all but the last element in 'list'.
  func InitP<type T>(P<T> list; S<T>);

  # LastP - Return the last element in 'list'.
  func LastP<type T>(P<T> list; T);

  # Append list b to the end of list a.
  func Append<type T>(S<T> a, S<T> b ; S<T>);

  func MapS<type A, type B, func F(A x; B)>(S<A> a; S<B>);
  func MapP<type A, type B, func F(A x; B)>(P<A> a; P<B>);
};

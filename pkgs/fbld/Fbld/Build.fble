
<<@>@>@ Monad@ = /Core/Monad%.Monad@;

@ String@ = /Core/String%.String@;
% Str = /Core/String%.Str;

@ Unit@ = /Core/Unit%.Unit@;

@ Loc@ = /Fbld/Loc%.Loc@;
@ Text@ = /Fbld/Text%.Text@;


<<@>@ M@>(Monad@<M@> m) {
  @ MRU@ = M@</Fbld/Result%.Result@<Unit@>>;
  @ Env@ = /Fbld/Invoke%<M@>.Env@;

  @ Core@ = /Fbld/Core%(m).Core@;
  % Utils = /Fbld/Invoke/Utils%(m);

  % MarkupModule = /Fbld/Markup%(m);
  @ Markup@ = MarkupModule.Markup@;
  % Inline = MarkupModule.Inline;
  % Entry = MarkupModule.Entry;

  (Core@ core, String@ buildstamp) {
    # @BuildStamp
    # The fble build stamp.
    (Loc@) { MRU@; } BuildStamp = (Loc@ loc) {
      core.text(Text@(buildstamp, loc));
    };

    Markup@ Markup = Inline[
      Entry(Str|'BuildStamp', Utils.A0((Env@ _, Loc@ loc) { BuildStamp(loc); }))
    ];

    @(BuildStamp, Markup);
  };
};


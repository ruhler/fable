
% True = /Core/Bool%.True;
% False = /Core/Bool%.False;
@ Char@ = /Core/Char%.Char@;
<@>@ Eq@ = /Eq%.Eq@;

# Eq --
#   Implementation of Eq@ for Char@. See documentation of /Eq%.Eq@.
Eq@<Char@> Eq = (Char@ a, Char@ b) {
  a.?(
    '
': b.?('
': True, : False),
    '	': b.?('	': True, : False),
    ' ': b.?(' ': True, : False),
    '!': b.?('!': True, : False),
    '"': b.?('"': True, : False),
    '#': b.?('#': True, : False),
    '$': b.?('$': True, : False),
    '%': b.?('%': True, : False),
    '&': b.?('&': True, : False),
    '''': b.?('''': True, : False),
    '(': b.?('(': True, : False),
    ')': b.?(')': True, : False),
    '*': b.?('*': True, : False),
    '+': b.?('+': True, : False),
    ',': b.?(',': True, : False),
    '-': b.?('-': True, : False),
    '.': b.?('.': True, : False),
    '/': b.?('/': True, : False),

    0: b.?(0: True, : False),
    1: b.?(1: True, : False),
    2: b.?(2: True, : False),
    3: b.?(3: True, : False),
    4: b.?(4: True, : False),
    5: b.?(5: True, : False),
    6: b.?(6: True, : False),
    7: b.?(7: True, : False),
    8: b.?(8: True, : False),
    9: b.?(9: True, : False),

    ':': b.?(':': True, : False),
    ';': b.?(';': True, : False),
    '<': b.?('<': True, : False),
    '=': b.?('=': True, : False),
    '>': b.?('>': True, : False),
    '?': b.?('?': True, : False),
    '@': b.?('@': True, : False),

    A: b.?(A: True, : False),
    B: b.?(B: True, : False),
    C: b.?(C: True, : False),
    D: b.?(D: True, : False),
    E: b.?(E: True, : False),
    F: b.?(F: True, : False),
    G: b.?(G: True, : False),
    H: b.?(H: True, : False),
    I: b.?(I: True, : False),
    J: b.?(J: True, : False),
    K: b.?(K: True, : False),
    L: b.?(L: True, : False),
    M: b.?(M: True, : False),
    N: b.?(N: True, : False),
    O: b.?(O: True, : False),
    P: b.?(P: True, : False),
    Q: b.?(Q: True, : False),
    R: b.?(R: True, : False),
    S: b.?(S: True, : False),
    T: b.?(T: True, : False),
    U: b.?(U: True, : False),
    V: b.?(V: True, : False),
    W: b.?(W: True, : False),
    X: b.?(X: True, : False),
    Y: b.?(Y: True, : False),
    Z: b.?(Z: True, : False),

    '[': b.?('[': True, : False),
    '\': b.?('\': True, : False),
    ']': b.?(']': True, : False),
    '^': b.?('^': True, : False),
    '_': b.?('_': True, : False),
    '`': b.?('`': True, : False),

    a: b.?(a: True, : False),
    b: b.?(b: True, : False),
    c: b.?(c: True, : False),
    d: b.?(d: True, : False),
    e: b.?(e: True, : False),
    f: b.?(f: True, : False),
    g: b.?(g: True, : False),
    h: b.?(h: True, : False),
    i: b.?(i: True, : False),
    j: b.?(j: True, : False),
    k: b.?(k: True, : False),
    l: b.?(l: True, : False),
    m: b.?(m: True, : False),
    n: b.?(n: True, : False),
    o: b.?(o: True, : False),
    p: b.?(p: True, : False),
    q: b.?(q: True, : False),
    r: b.?(r: True, : False),
    s: b.?(s: True, : False),
    t: b.?(t: True, : False),
    u: b.?(u: True, : False),
    v: b.?(v: True, : False),
    w: b.?(w: True, : False),
    x: b.?(x: True, : False),
    y: b.?(y: True, : False),
    z: b.?(z: True, : False),

    '{': b.?('{': True, : False),
    '|': b.?('|': True, : False),
    '}': b.?('}': True, : False),
    '~': b.?('~': True, : False));
};

@(Eq);

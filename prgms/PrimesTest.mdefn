
mdefn PrimesTest( ; ; PrimesTest()) {
  using Unit() { Unit; };
  using Bool() { Bool; };
  using UBNat() { Nat; 1; 3; 10; Lit2; Eq; };
  using Primes() { NthPrime; };
  using List(TestFailure) { TestFailureS = S; TestFailureP = P; };

  union TestName(
      Unit NthPrime_1_10
  );

  struct TestFailure(TestName name, Nat a, Nat b);
  
  func TEq(TestName name, Nat a, Nat b, TestFailureS rest; TestFailureS) {
    ?(Eq(a, b); rest,
      TestFailureS:cons(TestFailureP(TestFailure(name, a, b), rest)));
  };

  func Test( ; TestFailureS) {
    TEq(TestName:NthPrime_1_10(Unit()), Lit2(3(), 1()), NthPrime(1(), 10()),
    TestFailureS:nil(Unit()));
  };
};

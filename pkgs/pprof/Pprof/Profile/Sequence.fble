
@ Bool@ = /Core/Bool%.Bool@;
% True = /Core/Bool%.True;
% False = /Core/Bool%.False;

<@>% Reverse = /Core/List%.Reverse;

@ Sequence@ = /Pprof/Profile%.Sequence@;
% LocEq = /Pprof/Profile%.LocEq;


# Test if the needle is a prefix of the haystack.
(Sequence@, Sequence@) { Bool@; }
IsPrefixOf = (Sequence@ needle, Sequence@ haystack) {
  needle.?(nil: True);
  haystack.?(nil: False);
  LocEq(needle.cons.head, haystack.cons.head).?(false: False);
  IsPrefixOf(needle.cons.tail, haystack.cons.tail);
};

# Test if the needle is a subsequence of the haystack.
(Sequence@, Sequence@) { Bool@; }
IsSubsequenceOf = (Sequence@ needle, Sequence@ haystack) {
  IsPrefixOf(needle, haystack).?(true: True);
  haystack.?(nil: False);
  IsSubsequenceOf(needle, haystack.cons.tail);
};

# Test if the needle is a suffix of the haystack.
(Sequence@, Sequence@) { Bool@; }
IsSuffixOf = (Sequence@ needle, Sequence@ haystack) {
  IsPrefixOf(Reverse(needle), Reverse(haystack));
};

@(IsPrefixOf, IsSubsequenceOf, IsSuffixOf);

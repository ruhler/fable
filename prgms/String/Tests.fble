
@ Bool@ = /Bool%.Bool@;
% True = /Bool%.True;
% False = /Bool%.False;
<@>% List = /List%.List;
@ String@ = /String%.String@;
% Str = /String%.Str;
% Strs = /String%.Strs;
@ Test@ = /Test%.Test@;
% Test = /Test%.Test;
% TestSuite = /Test%.TestSuite;
<@>% AssertEquals = /Test%.AssertEquals;

# Tests --
#  A test suite to test the /String% module and friends.
Test@ Tests = TestSuite(Str|String, List<Test@>[
  Test(Str|Strs, !({
    String@ wnt = Str|'hellothere';
    String@ got = Strs[Str|'hello', Str|'there'];
    AssertEquals<String@>(/String/Eq%.Eq, /String/Show%.Show, wnt, got);
  })),

  Test(Str|Eq, !({
    Bool@ wnt = True;
    Bool@ got = /String/Eq%.Eq(Str|'A string!', Str|'A string!');
    AssertEquals<Bool@>(/Bool/Eq%.Eq, /Bool/Show%.Show, wnt, got);
  })),

  Test(Str|Ne, !({
    Bool@ wnt = False;
    Bool@ got = /String/Eq%.Eq(Str|'A string!', Str|'nope');
    AssertEquals<Bool@>(/Bool/Eq%.Eq, /Bool/Show%.Show, wnt, got);
  })),

  Test(Str|Show, !({
    String@ wnt = Str|'"hello"';
    String@ got = /String/Show%.Show(Str|hello);
    AssertEquals<String@>(/String/Eq%.Eq, /String/Show%.Show, wnt, got);
  }))
]);

@(Tests);

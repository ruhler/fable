
% True = /Bool%.True;

% Chars = /Char%.Chars;

<@>@ Maybe@ = /Maybe%.Maybe@;

<@>@ Get@ = /Process%.Get@;
<@>@ Put@ = /Process%.Put@;

@ Stdio@ = /Stdio%.Stdio@;

@ String@ = /String%.String@;
% Str = /String%.Str;
% Strs = /String%.Strs;

@ Unit@ = /Unit%.Unit@;

Stdio@ Bench = (Get@<Maybe@<String@>> stdin, Put@<String@> stdout) {
  Unit@ _ := stdout(Str|'GameOfLife...');
  Unit@ _gameoflife := /GameOfLife/Bench%.Bench;

  Unit@ _ := stdout(Strs[Str[Chars.nl], Str|'Invaders...']);
  Unit@ _invaders := /Invaders/Bench%.Bench;

  Unit@ _ := stdout(Strs[Str[Chars.nl], Str|'Md5...']);
  Unit@ _md5 := /Md5/Bench%.Bench;

  Unit@ _ := stdout(Strs[Str[Chars.nl], Str|'PiDigits...']);
  Unit@ _pidigits := /BenchmarkGame/PiDigits/Bench%.Bench;

  Unit@ _ := stdout(Strs[Str[Chars.nl], Str|'Sat...']);
  Unit@ _sat := /Sat/Bench%.Bench;

  Unit@ _ := stdout(Strs[Str[Chars.nl], Str|'Snake...']);
  Unit@ _snake := /Snake/Bench%.Bench;

  Unit@ _ := stdout(Strs[Str[Chars.nl], Str|'Sudoku...']);
  Unit@ _sudoku := /Sudoku/Tests%.Bench;

  Unit@ _ := stdout(Strs[Str[Chars.nl], Str|'TicTacToe...']);
  Unit@ _tictactoe := /TicTacToe/Tests%.Bench;

  Unit@ _ := stdout(Strs[Str[Chars.nl], Str|'DONE', Str[Chars.nl]]);
  !(True);
};

Bench;

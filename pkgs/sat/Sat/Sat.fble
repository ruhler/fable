
<@>@ List@ = /Core/List%.List@;

@ VarId@ = /Sat/Solver%.VarId@;
@ Var@ = /Sat/Solver%.Var@;
@ Clause@ = List@<Var@>;
@ Formula@ = List@<Clause@>;
@ Assignment@ = List@<Var@>;
@ Timeout@ = /Sat/Solver%.Timeout@;
@ Result@ = /Sat/Solver%.Result@;
@ Solver@ = /Sat/Solver%.Solver@;
% EqId = /Sat/Solver%.EqId;
% AddClause = /Sat/Solver%.AddClause;

(Solver@, Formula@) { Solver@; } AddClauses = (Solver@ s, Formula@ cls) {
  cls.?(nil: s);
  AddClauses(AddClause(s, cls.cons.head), cls.cons.tail);
};

(Formula@, Timeout@) { Result@; } Solve = (Formula@ f, Timeout@ t) {
  /Sat/Solver%.Solve(AddClauses(/Sat/Solver%.Empty, f), t);
};

@(VarId@, Var@, Clause@, Formula@, Assignment@, Result@, Timeout@,
  EqId, Solve);
